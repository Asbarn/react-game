{"version":3,"sources":["components/Footer/Footer.module.css","components/Header/Header.module.css","components/Header/Header.js","components/Footer/assets/images/rs_school_js.svg","components/Footer/Footer.js","helper.js","components/Square/Square.js","components/Field/Field.js","components/AI/AI.js","components/Game/Game.js","store.js","components/Settings/Settings.js","components/Statistics/Statistics.js","sounds/theme.mp3","sounds/checkerMove.mp3","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","styles","container","header","outerContainerId","pageWrapId","href","Footer","footer","inner","list","listItem","schoolLogo","target","rel","schoolLogoLink","src","SchoolLogoIcon","alt","schoolLogoIcon","isOdd","n","Math","abs","getColAsInt","columns","coordinate","charAt","getColAsAlph","columnInt","key","hasOwnProperty","getRowAsInt","parseInt","returnPlayerName","playerBool","connect","state","themeCheck","app","props","onClick","Field","renderSquare","coordinates","squareClasses","boardRender","columnsRender","moves","boardState","col","utils","row","currentPlayer","colorClass","push","activePiece","indexOf","moveClass","player","isKing","join","length","reverse","AI","this","columnLeft","columnRight","rowUpper","rowLower","corners","leftUpper","rightUpper","leftLower","rightLower","hasJumped","movesOut","jumps","killJumps","getCorners","advanceRow","cornerCoordinates","neighborPiece","opponentCorners","potentialJump","concat","killJumpsOut","currentState","Object","assign","history","stepNumber","movingPiece","jumpArray","jumpKills","shouldKing","object","value","newMoves","setCurrentPlayer","setActivePiece","keys","find","getMoves","stateOut","winner","evaluateWinner","player1Pieces","player1Moves","player2Pieces","player2Moves","moveCount","computerMoves","currentSquare","pieceMoves","getComputerMoves","moveKeys","superMoves","m","piece","movesData","jumpMoves","jumpCoordinates","highestScore","bestMove","a","moveTo","score","stateLeaf","newJumpMoves","finalMove","highestAllMoves","pieces","pieceMove","moveScore","chooseMove","floor","random","out","randomPiece","randomMoveTo","getCurrentPlayer","color","players","saveResult","time","localStorageStats","JSON","parse","localStorage","getItem","minutes","seconds","setItem","stringify","createBoard","board","initPlayers","forEach","i","createPiece","location","theme","audio","User","Opponent","Computer","initialState","useState","setState","cbRef","useRef","setStateCallback","useCallback","cb","current","useEffect","useStateCallback","second","minute","counter","setTime","isActive","setIsActive","intervalId","setInterval","secondCounter","minuteCounter","computedSecond","String","computedMinute","prevState","clearInterval","gameStatus","class","resetClass","computerTurn","getCurrentState","slice","handleClick","clickedSquare","postMoveState","movePiece","play","updateStatePostMove","then","res","curState","setTimeout","computerMove","curHistory","getSmartMove","result","Promise","rej","SET_PLAYERS","SET_COLOR","SET_MUSIC","SET_MUSIC_CHECK","SET_THEME","SET_THEME_CHECK","music","musicCheck","setMusic","dispatch","type","setMusicAction","setMusicCheck","setMusicCheckAction","rootReducer","combineReducers","action","persistedState","savedState","e","console","log","loadFromStorage","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","subscribe","saveToStorage","getState","setColor","setColorAction","setTheme","setThemeAction","setThemeCheck","setThemeCheckAction","onChangeTheme","event","onChangeThemeCheck","onValueChange","checked","onChange","min","max","step","Statistics","sort","setSort","stats","b","scope","map","el","num","useAudio","url","ending","volume","Audio","playing","setPlaying","pause","addEventListener","removeEventListener","setPlayers","setPlayersAction","useHistory","startGame","audioCheck","document","id","exact","from","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,uBAAuB,SAAW,yBAAyB,MAAQ,sBAAsB,KAAO,qBAAqB,WAAa,2BAA2B,eAAiB,+BAA+B,eAAiB,iC,mBCA/RD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,yB,qLC2BlDC,EAvBA,WAGb,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACE,sBAAKF,UAAWC,IAAOE,OAAvB,UACE,eAAC,QAAD,CAAMC,iBAAkB,kBAAmBC,WAAY,YAAvD,UACE,mBAAGL,UAAU,YAAYM,KAAK,QAA9B,kBAGA,mBAAGN,UAAU,YAAYM,KAAK,YAA9B,sBAGA,mBAAGN,UAAU,YAAYM,KAAK,cAA9B,2BAIF,gD,iBCtBO,MAA0B,yCCoC1BC,EAjCA,WACb,OACE,wBAAQP,UAAWC,IAAOO,OAA1B,SACE,qBAAKR,UAAWC,IAAOC,UAAvB,SACE,sBAAKF,UAAWC,IAAOQ,MAAvB,UACE,6BAAK,uBAEL,qBAAKT,UAAWC,IAAOS,KAAvB,SACE,mBAAGJ,KAAK,4BAA4BN,UAAWC,IAAOU,SAAtD,SACG,wBAIL,qBAAKX,UAAWC,IAAOW,WAAvB,SACE,mBACEN,KAAK,wBACLO,OAAO,SACPC,IAAI,sBACJd,UAAWC,IAAOc,eAJpB,SAME,qBACEC,IAAKC,EACLC,IAAI,cACJlB,UAAWC,IAAOkB,6B,wCC1B3B,SAASC,EAAMC,GACpB,OAA2B,IAApBC,KAAKC,IAAIF,EAAI,GAOf,SAASG,EAAYC,EAASC,GACnC,OAAOD,EAAQC,EAAWC,OAAO,IAG5B,SAASC,EAAaH,EAASI,GACpC,IAAK,IAAIC,KAAOL,EACd,GAAKA,EAAQM,eAAeD,IAIxBD,IAAcJ,EAAQK,GACxB,OAAOA,EAIX,OAAO,EAGF,SAASE,EAAYN,GAC1B,OAAOO,SAASP,EAAWC,OAAO,GAAI,IAGjC,SAASO,EAAiBC,GAC/B,OAAsB,IAAfA,EAAsB,UAAY,UC5B3C,IAgBeC,eAJS,SAACC,GAAD,MAAY,CAClCC,WAAYD,EAAME,IAAID,cAGTF,EAhBA,SAACI,GACd,OACE,wBAAQxC,UAAW,WAAkC,MAArBwC,EAAMF,WAClC,iBACqB,MAArBE,EAAMF,WACJ,GACA,mBAAqBE,EAAK,cAAmBC,QAASD,EAAK,QAJjE,SAKE,6BCkESE,EAxED,SAACF,GACb,IAAMG,EAAe,SAACC,EAAaC,GACjC,OACE,cAAC,EAAD,CAEEA,cAAeA,EACfJ,QAAS,kBAAMD,EAAMC,QAAQG,KAFxBA,IAOPE,EAAc,GACdC,EAAgB,GACdC,EAAQR,EAAMQ,MAEpB,IAAK,IAAIJ,KAAeJ,EAAMS,WAC5B,GAAKT,EAAMS,WAAWlB,eAAea,GAArC,CAIA,IAAMM,EAAMC,EAAkBX,EAAMf,QAASmB,GACvCQ,EAAMD,EAAkBP,GAExBS,EAAgBF,EAAuBX,EAAMa,eAE7CC,EACHH,EAAYD,IAAQC,EAAYC,KAC/BD,EAAYD,KAASC,EAAYC,GAC/B,QACA,QAEFP,EAAgB,GASpB,GAPAA,EAAcU,KAAKX,GACnBC,EAAcU,KAAKD,GAEfd,EAAMgB,cAAgBZ,GACxBC,EAAcU,KAAK,YAGjBP,EAAMS,QAAQb,IAAgB,EAAG,CACnC,IAAIc,EAAY,WAAaL,EAAgB,QAC7CR,EAAcU,KAAKG,GAGiB,OAAlClB,EAAMS,WAAWL,KACnBC,EAAcU,KAAKf,EAAMS,WAAWL,GAAae,OAAS,WAEb,IAAzCnB,EAAMS,WAAWL,GAAagB,QAChCf,EAAcU,KAAK,SAIvBV,EAAgBA,EAAcgB,KAAK,KAEnCd,EAAcQ,KACZZ,EAAaC,EAAaC,EAAeL,EAAMS,WAAWL,KAGxDG,EAAce,QAAU,IAC1Bf,EAAgBA,EAAcgB,UAC9BjB,EAAYS,KACV,qBAA8BvD,UAAU,YAAxC,SACG+C,GADOD,EAAYgB,SAIxBf,EAAgB,IAGpB,OAAOD,G,gBC2TMkB,E,WAjYb,WAAYvC,GAAU,oBACpBwC,KAAKxC,QAAUA,E,8CAGjB,SAAWmB,GACT,IAAMM,EAAMC,EAAkBc,KAAKxC,QAASmB,GACtCQ,EAAMD,EAAkBP,GAExBsB,EACJhB,EAAM,GAAK,GAAIC,EAAmBc,KAAKxC,QAASyB,EAAM,GAClDiB,EACJjB,EAAM,GAAK,GAAIC,EAAmBc,KAAKxC,QAASyB,EAAM,GAElDkB,EAAWhB,EAAM,EAAI,GAAIA,EAAM,EAC/BiB,EAAWjB,EAAM,EAAI,GAAIA,EAAM,EAEjCkB,EAAU,GAed,OAbAA,EAAQC,WACS,IAAfL,IAAqC,IAAbE,EAAqBF,EAAaE,EAAW,KACvEE,EAAQE,YACU,IAAhBL,IAAsC,IAAbC,EACrBD,EAAcC,EACd,KACNE,EAAQG,WACS,IAAfP,IAAqC,IAAbG,EAAqBH,EAAaG,EAAW,KACvEC,EAAQI,YACU,IAAhBP,IAAsC,IAAbE,EACrBF,EAAcE,EACd,KAECC,I,sBAGT,SAASrB,EAAYL,GAAiD,IAApCgB,EAAmC,wDAAnBe,EAAmB,wDACnE,GAAgC,OAA5B1B,EAAWL,GACb,MAAO,GAGT,IA8CIgC,EA9CA5B,EAAQ,GACR6B,EAAQ,GAERC,EAAY,GAEVR,EAAUL,KAAKc,WAAWnC,GAE1BQ,EAAMD,EAAkBP,GACxBe,EAASV,EAAWL,GAAae,OAEjCqB,EAAwB,YAAXrB,EAAuBP,EAAM,EAAIA,EAAM,EAE1D,IAAK,IAAItB,KAAOwC,EACd,GAAKA,EAAQvC,eAAeD,GAA5B,CAIA,IAAImD,EAAoBX,EAAQxC,GAEhC,GAA0B,OAAtBmD,IAICrB,KAAUqB,EAAkBxB,QAAQuB,GAAc,IAIvD,GAAsC,OAAlC/B,EAAWgC,GACbjC,EAAMO,KAAK0B,OACN,CACL,IAAIC,EAAgBjC,EAAWgC,GAE/B,GAAIC,EAAcvB,SAAWA,EAC3B,SAGF,IAAIwB,EAAkBlB,KAAKc,WAAWE,GAClCG,EAAgBD,EAAgBrD,GAEF,OAA9BmB,EAAWmC,KACbN,EAAUG,GAAqBG,EAC/BP,EAAMtB,KAAK6B,KAQfR,GADgB,IAAdD,EACS3B,EAAMqC,OAAOR,GAGbA,EAGb,IAAIS,EAAeT,EAAMf,OAAS,EAAIgB,EAAY,KAElD,MAAO,CAACF,EAAUU,K,uBAGpB,SAAU1C,EAAaP,GACrB,IAAIkD,EAAeC,OAAOC,OAAO,GAAIpD,EAAMqD,QAAQrD,EAAMsD,aACrD1C,EAAauC,OAAOC,OAAO,GAAIF,EAAatC,YAC5C2C,EAAcJ,OAAOC,OAAO,GAAIxC,EAAWZ,EAAMmB,cAEjDqC,EAAY,GAEhB,IAAK,IAAI/D,KAAOO,EAAMyD,UACfzD,EAAMyD,UAAU/D,eAAeD,IAIpC+D,EAAUtC,KAAKlB,EAAMyD,UAAUhE,IAEjC,GACEO,EAAMW,MAAMS,QAAQb,GAAe,GACnCiD,EAAUpC,QAAQb,GAAe,EAEjC,OAAO,KAILqB,KAAK8B,WAAWH,EAAahD,KAC/BgD,EAAYhC,QAAS,GAGvBX,EAAWZ,EAAMmB,aAAe,KAChCP,EAAWL,GAAegD,EAE1B,IH/H0BI,EAAQC,EG+H5BtC,EAASiC,EAAYjC,OACvBgB,EAAY,KACZuB,EAAW,GACXC,EAA8B,YAAXxC,EACnByC,EAAiB,KAEjBP,EAAUpC,QAAQb,IAAgB,IAEpCK,GHvIwB+C,EGsImB3D,EAAMyD,UHtIjBG,EGsI4BrD,EHrIzD4C,OAAOa,KAAKL,GAAQM,MAAK,SAACxE,GAAD,OAASkE,EAAOlE,KAASmE,OGsItB,MAE/BC,EAAWjC,KAAKsC,SACdtD,EACAL,EACAgD,EAAYhC,QACZ,IAGW,GAAGE,OAAS,GACvBa,GAAY,EACZwB,EAAmBZ,EAAalC,cAChC+C,EAAiBxD,GAEjB+B,EAAY,OAIE,IAAdA,GACEuB,EAAS,GAAGpC,OAAS,IACvBqC,EAAmBZ,EAAalC,cAChC+C,EAAiBxD,GAIrB,IAAI4D,EAAW,GAUf,OARAA,EAASvD,WAAaA,EACtBuD,EAASnD,cAAgB8C,EACzBK,EAAShD,YAAc4C,EACvBI,EAASxD,OAAsB,IAAd2B,EAAqBuB,EAAS,GAAK,GACpDM,EAASV,WAA0B,IAAdnB,EAAqBuB,EAAS,GAAK,KACxDM,EAAS7B,WAA0B,IAAdA,EAAqBhB,EAAS,KACnD6C,EAASC,OAASxC,KAAKyC,eAAezD,GAE/BuD,I,wBAGT,SAAWZ,EAAahD,GACtB,IAA2B,IAAvBgD,EAAYhC,OACd,OAAO,EAGT,IAAMR,EAAMD,EAAkBP,GACxBe,EAASiC,EAAYjC,OAE3B,OACW,IAARP,GAAwB,YAAXO,GAAkC,IAARP,GAAwB,YAAXO,I,4BAIzD,SAAeV,GACb,IAAI0D,EAAgB,EAChBC,EAAe,EAEfC,EAAgB,EAChBC,EAAe,EAEnB,IAAK,IAAIlE,KAAeK,EACtB,GACGA,EAAWlB,eAAea,IACC,OAA5BK,EAAWL,GAFb,CAOA,IAMMmE,EANY9C,KAAKsC,SACrBtD,EACAL,EACAK,EAAWL,GAAagB,QACxB,GAE0B,GAAGE,OAEQ,YAAnCb,EAAWL,GAAae,UACxBgD,EACFC,GAAgBG,MAEdF,EACFC,GAAgBC,GAIpB,OAAsB,IAAlBJ,EACK,gBAGa,IAAlBE,EACK,gBAGY,IAAjBD,EACK,eAGY,IAAjBE,EACK,eAGF,O,8BAGT,SAAiB7D,EAAYU,GAC3B,IACIqD,EAAgB,GAEpB,IAAK,IAAMpE,KAAeK,EACxB,GAAKA,EAAWlB,eAAea,GAA/B,CAIA,IAAMqE,EAAgBhE,EAAWL,GAEjC,GAAqB,MAAjBqE,GAIAA,EAActD,SAAWA,EAA7B,CAIA,IAAMuD,EAlBKjD,KAkBasC,SACtBtD,EACAL,EACAK,EAAWL,GAAagB,QACxB,IAGEsD,EAAW,GAAGpD,OAAS,GAAuB,OAAlBoD,EAAW,MACzCF,EAAcpE,GAAesE,IAIjC,OAAOF,I,0BAGT,SAAa3E,EAAOY,EAAYU,GAO9B,IANA,IAAMqD,EAAgB/C,KAAKkD,iBAAiBlE,EAAYU,GAElDyD,EAAW5B,OAAOa,KAAKW,GAEvBK,EAAa,GAEVC,EAAI,EAAGA,EAAIF,EAAStD,SAAUwD,EAAG,CACxC,IAAMC,EAAQH,EAASE,GAEjBE,EAAYR,EAAcO,GAAO,GACjCzB,EAAYkB,EAAcO,GAAO,GAEjCE,EAAY,GAElB,IAAK,IAAMC,KAAmB5B,EACvBA,EAAU/D,eAAe2F,IAG9BD,EAAUlE,KAAKuC,EAAU4B,IAO3B,IAJA,IAAIC,EAAe,EACfC,EAAW,KAGNC,EAAI,EAAGA,EAAIL,EAAU1D,SAAU+D,EAAG,CACzC,IAAMC,EAASN,EAAUK,GAErBE,EAAQ,EAERC,EAAYxC,OAAOC,OAAO,GAAIpD,GAUlC,IARA2F,EAAUxE,YAAc+D,EACxBS,EAAUhF,MAAQwE,EAClBQ,EAAUlC,UAAYA,EAElB2B,EAAUhE,QAAQqE,IAAW,IAC/BC,GAAS,KAGwB,IAA5BC,EAAU3E,eAAyB,CACxC,IAAM4E,EAAehE,KAAKsC,SACxByB,EACAA,EAAUxE,YACVwE,EAAUxE,YAAYI,QACtB,GAGFoE,EAAUhF,MAAQiF,EAAa,GAC/BD,EAAUlC,UAAYmC,EAAa,GAEnCF,GAAS,GAGPA,GAASJ,IACXA,EAAeI,EACfH,EAAWE,GAIfT,EAAWE,GAAS,CAACK,EAAUD,GAGjC,IAAIO,EAAY,GACZC,EAAkB,EAEtB,IAAK,IAAIC,KAAUf,EACjB,GAAKA,EAAWtF,eAAeqG,GAA/B,CAIA,IAAMC,EAAYhB,EAAWe,GAAQ,GAC/BE,EAAYjB,EAAWe,GAAQ,GAEjCE,GAAaH,IACXG,IAAcH,GAChBD,EAAU3E,KAAK,CAAC6E,EAAQC,IAEtBC,EAAYH,KACdD,EAAY,IACF3E,KAAK,CAAC6E,EAAQC,IACxBF,EAAkBG,IAKxB,IAAMC,EAAaL,EAAU5G,KAAKkH,MAAMlH,KAAKmH,SAAWP,EAAUpE,SAE5D4E,EAAM,GAIZ,OAHAA,EAAInB,MAAQgB,EAAW,GACvBG,EAAIZ,OAASS,EAAW,GAEjBG,I,2BAGT,SAAczF,EAAYU,GACxB,IAAMqD,EAAgB/C,KAAKkD,iBAAiBlE,EAAYU,GAClD0C,EAAOb,OAAOa,KAAKW,GACnB2B,EAActC,EAAK/E,KAAKkH,MAAMlH,KAAKmH,SAAWpC,EAAKvC,SAEnD0D,EAAYR,EAAc2B,GAAa,GACvCC,EACJpB,EAAUlG,KAAKkH,MAAMlH,KAAKmH,SAAWjB,EAAU1D,SAE7C4E,EAAM,GAIV,OAHAA,EAAInB,MAAQoB,EACZD,EAAIZ,OAASc,EAENF,M,KCvWX,IAAMG,EAAmB,SAACC,EAAOC,GAC/B,QAAIA,EAAU,IAAoB,UAAVD,GAIpBE,EAAa,SAAC3G,EAAO4G,GACzB,IAAIC,EAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,eAC9B,OAAtBJ,IACFA,EAAoB,IAEtBA,EAAkB3F,KAAK,CACrBP,MAAOX,EAAMsD,WACbsD,KAAM,CAAEM,QAASN,EAAKM,QAASC,QAASP,EAAKO,WAE/CH,aAAaI,QAAQ,aAAcN,KAAKO,UAAUR,KAgB9CS,EAAc,SAAClI,GACnB,IAAImI,EAAQ,GAEZ,IAAK,IAAI9H,KAAOL,EACd,GAAIA,EAAQM,eAAeD,GACzB,IAAK,IAAIT,EAAI,EAAGA,GAAK,IAAKA,EAAG,CAE3BuI,EADU9H,EAAMT,GACH,KAOnB,OAFAuI,EAAQC,EAAYD,IAIhBC,EAAc,SAACD,GAsCnB,MArCgB,CACd,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAiBME,SAAQ,SAAUC,GACxBH,EAAMG,GAAKC,EAAYD,EAAG,cAhBZ,CACd,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAOMD,SAAQ,SAAUC,GACxBH,EAAMG,GAAKC,EAAYD,EAAG,cAGrBH,GAGHI,EAAc,SAACC,EAAUtG,GAC7B,IAAI4D,EAAQ,GAMZ,OAJAA,EAAM5D,OAASA,EACf4D,EAAM0C,SAAWA,EACjB1C,EAAM3D,QAAS,EAER2D,GAgiBMnF,eANS,SAACC,GAAD,MAAY,CAClC0G,QAAS1G,EAAME,IAAIwG,QACnBD,MAAOzG,EAAME,IAAIuG,MACjBoB,MAAO7H,EAAME,IAAI2H,SAGJ9H,EA7hBF,SAAC,GAAsC,IAApC2G,EAAmC,EAAnCA,QAASD,EAA0B,EAA1BA,MAAOqB,EAAmB,EAAnBA,MAAOD,EAAY,EAAZA,MAC/BzI,EAhFU,CAChBA,EAAY,EACZA,EAAY,EACZA,EAAY,EACZA,EAAY,EACZA,EAAY,EACZA,EAAY,EACZA,EAAY,EACZA,EAAY,GAyEN2I,EAAO,IAAIC,EAAS5I,GACpB6I,EAAW,IAAID,EAAS5I,GAHmB,EApHnD,SAA0B8I,GAAe,IAAD,EACZC,mBAASD,GADG,mBAC/BlI,EAD+B,KACxBoI,EADwB,KAEhCC,EAAQC,iBAAO,MAEfC,EAAmBC,uBAAY,SAACxI,EAAOyI,GAC3CJ,EAAMK,QAAUD,EAChBL,EAASpI,KACR,IASH,OAPA2I,qBAAU,WACJN,EAAMK,UACRL,EAAMK,QAAQ1I,GACdqI,EAAMK,QAAU,QAEjB,CAAC1I,IAEG,CAACA,EAAOuI,GAwGWK,CAAiB,CACzCvF,QAAS,CACP,CACEzC,WAAY0G,EAAYlI,GACxB4B,cAAewF,EAAiBC,EAAOC,KAG3CvF,YAAa,KACbR,MAAO,GACP8C,UAAW,KACXnB,UAAW,KACXgB,WAAY,EACZc,OAAQ,OAhBuC,mBAI1CpE,EAJ0C,KAInCoI,EAJmC,KAkBpC,MAATpI,GACFoI,EAAS,CACP/E,QAAS,CACP,CACEzC,WAAY0G,EAAYlI,GACxB4B,cAAewF,EAAiBC,EAAOC,KAG3CvF,YAAa,KACbR,MAAO,GACP8C,UAAW,KACXnB,UAAW,KACXgB,WAAY,EACZc,OAAQ,OA/BqC,MAkCzB+D,mBAAS,CAAEU,OAAQ,KAAMC,OAAQ,KAAMC,QAAS,IAlCvB,mBAkC1CnC,EAlC0C,KAkCpCoC,EAlCoC,OAmCjBb,oBAAS,GAnCQ,mBAmC1Cc,EAnC0C,KAmChCC,EAnCgC,KAqCjDP,qBAAU,WACR,IAAIQ,EAwBJ,OAtBIF,IACFE,EAAaC,aAAY,WACvB,IAAMC,EAAgBzC,EAAKmC,QAAU,GAC/BO,EAAgBrK,KAAKkH,MAAMS,EAAKmC,QAAU,IAE5CQ,EAC+B,IAAjCC,OAAOH,GAAe5H,OAAtB,WACQ4H,GACJA,EACFI,EAC+B,IAAjCD,OAAOF,GAAe7H,OAAtB,WACQ6H,GACJA,EAENN,GAAQ,SAACU,GAAD,MAAgB,CACtBb,OAAQU,EACRT,OAAQW,EACRV,QAASW,EAAUX,QAAU,QAE9B,MAGE,kBAAMY,cAAcR,MAC1B,CAACF,EAAUrC,EAAKmC,UAEnB,IAAI7F,EAAY,OAAGlD,QAAH,IAAGA,OAAH,EAAGA,EAAOqD,QAAQrD,EAAMsD,YACpC1C,EAAU,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAAOqD,QAAQrD,EAAMsD,YAAY1C,WAE9CI,EAAa,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAAOqD,QAAQrD,EAAMsD,YAAYtC,cACjDL,EAAK,OAAGX,QAAH,IAAGA,OAAH,EAAGA,EAAOW,MAEfiJ,EACF,gCACE,gCACmC,KAApB,OAAZ1G,QAAY,IAAZA,OAAA,EAAAA,EAAclC,eACX,iBACA,mBAEN,sBAAM6I,MAAM,SAAZ,SAAsBjD,EAAKkC,SAC3B,qCACA,sBAAMe,MAAM,SAAZ,SAAsBjD,EAAKiC,YAG3BiB,EAAa,QAER,OAAL9J,QAAK,IAALA,OAAA,EAAAA,EAAOsD,YAAa,IACtBwG,GAAc,aAEhBnB,qBAAU,WACkC,MAAtC3B,aAAaC,QAAQ,cACvBmB,EAAStB,KAAKC,MAAMC,aAAaC,QAAQ,gBAEzCmB,EAAS,CACP/E,QAAS,CACP,CACEzC,WAAY0G,EAAYlI,GACxB4B,cAAewF,EAAiBC,EAAOC,KAG3CvF,YAAa,KACbR,MAAO,GACP8C,UAAW,KACXnB,UAAW,KACXgB,WAAY,EACZc,OAAQ,OAG6B,MAArC4C,aAAaC,QAAQ,aACvB+B,EAAQlC,KAAKC,MAAMC,aAAaC,QAAQ,eACnC+B,EAAQ,CAAEH,OAAQ,KAAMC,OAAQ,KAAMC,QAAS,IAClD/I,EAAMqD,QAAQ,GAAGrC,eACnB+I,EAAa,KAAM/J,KAEpB,IAEH2I,qBAAU,WACR3B,aAAaI,QAAQ,aAAcN,KAAKO,UAAUrH,IAClDgH,aAAaI,QAAQ,YAAaN,KAAKO,UAAUT,OAEnD+B,qBAAU,WACR,OAAQ3I,EAAMoE,QACZ,IAAK,gBACH8E,GAAY,GACZvC,EAAW3G,EAAO,CAAEkH,QAASN,EAAKkC,OAAQ3B,QAASP,EAAKiC,SACxD7B,aAAaI,QACX,aACAN,KAAKO,UAAU,CACbhE,QAAS,CACP,CACEzC,WAAY0G,EAAYlI,GACxB4B,cAAewF,EAAiBC,EAAOC,KAG3CvF,YAAa,KACbR,MAAO,GACP8C,UAAW,KACXnB,UAAW,KACXgB,WAAY,EACZc,OAAQ,QAGZ4C,aAAaI,QACX,YACAN,KAAKO,UAAU,CAAEwB,OAAQ,KAAMC,OAAQ,KAAMC,QAAS,KAExDa,EACE,gCACE,8CACA,sBAAMC,MAAM,SAAZ,SAAsBjD,EAAKkC,SAC3B,qCACA,sBAAMe,MAAM,SAAZ,SAAsBjD,EAAKiC,YAG/B,MACF,IAAK,gBACHK,GAAY,GACZvC,EAAW3G,EAAO,CAAEkH,QAASN,EAAKkC,OAAQ3B,QAASP,EAAKiC,SACxD7B,aAAaI,QACX,aACAN,KAAKO,UAAU,CACbhE,QAAS,CACP,CACEzC,WAAY0G,EAAYlI,GACxB4B,cAAewF,EAAiBC,EAAOC,KAG3CvF,YAAa,KACbR,MAAO,GACP8C,UAAW,KACXnB,UAAW,KACXgB,WAAY,EACZc,OAAQ,QAGZ4C,aAAaI,QACX,YACAN,KAAKO,UAAU,CAAEwB,OAAQ,KAAMC,OAAQ,KAAMC,QAAS,KAExDa,EACE,gCACE,8CACA,sBAAMC,MAAM,SAAZ,SAAsBjD,EAAKkC,SAC3B,qCACA,sBAAMe,MAAM,SAAZ,SAAsBjD,EAAKiC,YAG/B,MACF,IAAK,eACHK,GAAY,GACZvC,EAAW3G,EAAO,CAAEkH,QAASN,EAAKkC,OAAQ3B,QAASP,EAAKiC,SACxD7B,aAAaI,QACX,aACAN,KAAKO,UAAU,CACbhE,QAAS,CACP,CACEzC,WAAY0G,EAAYlI,GACxB4B,cAAewF,EAAiBC,EAAOC,KAG3CvF,YAAa,KACbR,MAAO,GACP8C,UAAW,KACXnB,UAAW,KACXgB,WAAY,EACZc,OAAQ,QAGZ4C,aAAaI,QACX,YACAN,KAAKO,UAAU,CAAEwB,OAAQ,KAAMC,OAAQ,KAAMC,QAAS,KAExDa,EACE,gCACE,6DACA,sBAAMC,MAAM,SAAZ,SAAsBjD,EAAKkC,SAC3B,qCACA,sBAAMe,MAAM,SAAZ,SAAsBjD,EAAKiC,YAG/B,MACF,IAAK,eACHK,GAAY,GACZvC,EAAW3G,EAAO,CAAEkH,QAASN,EAAKkC,OAAQ3B,QAASP,EAAKiC,SACxD7B,aAAaI,QACX,aACAN,KAAKO,UAAU,CACbhE,QAAS,CACP,CACEzC,WAAY0G,EAAYlI,GACxB4B,cAAewF,EAAiBC,EAAOC,KAG3CvF,YAAa,KACbR,MAAO,GACP8C,UAAW,KACXnB,UAAW,KACXgB,WAAY,EACZc,OAAQ,QAGZ4C,aAAaI,QACX,YACAN,KAAKO,UAAU,CAAEwB,OAAQ,KAAMC,OAAQ,KAAMC,QAAS,KAExDa,EACE,gCACE,6DACA,sBAAMC,MAAM,SAAZ,SAAsBjD,EAAKkC,SAC3B,qCACA,sBAAMe,MAAM,SAAZ,SAAsBjD,EAAKiC,YAG/B,MACF,QACEe,EACE,gCACE,gCACkC,IAA/B1G,EAAalC,cACV,iBACA,mBAEN,sBAAM6I,MAAM,SAAZ,SAAsBjD,EAAKkC,SAC3B,qCACA,sBAAMe,MAAM,SAAZ,SAAsBjD,EAAKiC,eAKlC,QAAC7I,QAAD,IAACA,OAAD,EAACA,EAAOoE,SAEX,IAAM4F,EAAkB,WACtB,IAAM3G,EAAUrD,EAAMqD,QAAQ4G,MAAM,EAAGjK,EAAMsD,WAAa,GAC1D,OAAOD,EAAQA,EAAQ5B,OAAS,IAG5ByI,EAAW,uCAAG,WAAO3J,GAAP,uBAAAiF,EAAA,yDACG,OAAjBxF,EAAMoE,OADQ,oDAIZlB,EAAe8G,IACfpJ,EAAasC,EAAatC,WAIV,QAHhBuJ,EAAgBvJ,EAAWL,IANf,oBAWd4J,EAAc7I,SAAWzB,EAAiBqD,EAAalC,eAXzC,oDAiBZhB,EAAMmB,cAAgBZ,GAAmC,OAApBP,EAAMsC,UAjB/B,wBAkBd8F,EAAS,2BACJpI,GADG,IAENmB,YAAa,KACbR,MAAO,GACP8C,UAAW,QAtBC,8BA6BQ,OAApBzD,EAAMsC,WAAkD,OAA5B1B,EAAWL,GA7B3B,0DAkCZ4E,EAAY4C,EAAK7D,SACnBtD,EACAL,EACA4J,EAAc5I,QACd,GAGF6G,EAAS,2BACJpI,GADG,IAENmB,YAAaZ,EACbI,MAAOwE,EAAU,GACjB1B,UAAW0B,EAAU,MA7CP,8BAmDQ,OAAtBnF,EAAMmB,YAnDQ,wDAuDdnB,EAAMW,MAAMc,OAAS,GAvDP,oBA0DM,QAFhB2I,EAAgBrC,EAAKsC,UAAU9J,EAAaP,EAAO0G,IAxDzC,mDA6DhBoB,EAAMwC,OACNC,EAAoBH,GAAeI,MAAK,SAACC,GAErCL,EAAcpJ,iBAAmBA,GACR,OAAzBoJ,EAAchG,QAEd2F,EAAa,KAAMU,MAnEP,4CAAH,sDAyEXV,EAAe,SAAfA,IAA4C,IAA5B7E,EAA2B,uDAAnB,KAAMwF,EAAa,uCAC3ChE,EAAU,GAIdiE,YAAW,WACT,IAIIC,EACArK,EACAkF,EANEoF,EAAaH,EAASrH,QAAQ4G,MAAM,EAAGS,EAASpH,WAAa,GAE7D1C,EAAaiK,EAAWA,EAAWpJ,OAAS,GAAGb,WAMvC,OAAVsE,GAOF3E,GANAqK,EAAe3C,EAAS6C,aACtBJ,EACA9J,EACY,IAAZ8F,GAAsC,UAAVD,EAAZ,UAA4C,YAGnCvB,MAC3BO,EAASmF,EAAanF,SAEtBmF,EAAe7C,EAAK7D,SAClBtD,EACAsE,EACAtE,EAAWsE,GAAO3D,QAClB,GAEFhB,EAAc2E,EACdO,EACEmF,EAAa,GAAG3L,KAAKkH,MAAMlH,KAAKmH,SAAWwE,EAAa,GAAGnJ,UAG/D,IAAM0I,EAAgBvJ,EAAWL,GAE7B4E,EAAY4C,EAAK7D,SACnBtD,EACAL,EACA4J,EAAc5I,QACd,GAGF6G,EAAS,2BAEFsC,GAFC,IAGJvJ,YAAaZ,EACbI,MAAOwE,EAAU,GACjB1B,UAAW0B,EAAU,MAEvB,SAACsF,GACCE,YAAW,WACT,IAAMP,EAAgBrC,EAAKsC,UAAU5E,EAAQgF,EAAK/D,GAE5B,OAAlB0D,IAGJtC,EAAMwC,OACNC,EAAoBH,GAAeI,MAAK,SAACO,IAGH,IAAhCX,EAAcpJ,eAAqC,UAAVyF,GAC3CsD,EAAaK,EAAcjJ,YAAa4J,SAG3C,UAGN,MAGCR,EAAsB,SAACH,GAC3B,OAAO,IAAIY,SAAQ,SAACP,EAAKQ,GACvB7C,EAAS,2BAEFpI,GAFC,IAGJqD,QAAQ,GAAD,mBACFrD,EAAMqD,SADJ,CAEL,CACEzC,WAAYwJ,EAAcxJ,WAC1BI,cAAeoJ,EAAcpJ,iBAGjCG,YAAaiJ,EAAcjJ,YAC3BR,MAAOyJ,EAAczJ,MACrB8C,UAAW2G,EAAc3G,UACzBnB,UAAW8H,EAAc9H,UACzBgB,WAAYtD,EAAMqD,QAAQ5B,OAC1B2C,OAAQgG,EAAchG,SAExBqG,OA4CN,OACE,sBAAK9M,UAAU,gBAAf,UACE,sBACEA,UACW,KAATkK,EACI,oBACS,KAATA,EACE,aACA,qBANV,UASE,sBAAKlK,UAAU,oBAAf,UACE,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,wCAEF,cAAC,EAAD,CACEiD,WAAYA,EACZI,cAAeA,EACfG,YAAW,OAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAOmB,YACpBR,MAAOA,EACPvB,QAASA,EACTgB,QAAS,SAACG,GAAD,OAAiB2J,EAAY3J,MAExC,sBAAK5C,UAAU,oBAAf,UACE,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,2CAGJ,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,cAAf,SAA8BiM,IAC9B,qBAAKjM,UAAU,QAAf,SACE,wBAAQA,UAAWmM,EAAY1J,QAAS,kBAjF9CgI,EAAS,CACP/E,QAAS,CACP,CACEzC,WAAY0G,EAAYlI,GACxB4B,cAAewF,EAAiBC,EAAOC,KAG3CvF,YAAa,KACbR,MAAO,GACP8C,UAAW,KACXnB,UAAW,KACXgB,WAAY,EACZc,OAAQ,OAEV4E,EAAQhC,aAAaC,QAAQ,CAAE4B,OAAQ,KAAMC,OAAQ,KAAMC,QAAS,KACpE/B,aAAaI,QACX,aACAN,KAAKO,UAAU,CACbhE,QAAS,CACP,CACEzC,WAAY0G,EAAYlI,GACxB4B,cAAewF,EAAiBC,EAAOC,KAG3CvF,YAAa,KACbR,MAAO,GACP8C,UAAW,KACXnB,UAAW,KACXgB,WAAY,EACZc,OAAQ,aAGZ4C,aAAaI,QACX,YACAN,KAAKO,UAAU,CAAEwB,OAAQ,KAAMC,OAAQ,KAAMC,QAAS,MA+ClD,gC,gCCnoBJmC,EAAc,cAClBC,EAAY,YACZC,EAAY,YACZC,EAAkB,kBAClBC,EAAY,YACZC,EAAkB,kBAEdrD,EAAe,CACnBxB,QAAS,KACTD,MAAO,QACPoB,MAAO,EACP5H,WAAY,EACZuL,MAAO,EACPC,WAAY,GAqGDC,EAAW,SAACF,GACvB,OAAO,SAACG,GACNA,EAlCmB,SAACH,GAAD,MAAY,CACjCI,KAAMR,EACNI,SAgCWK,CAAeL,MAIfM,EAAgB,SAACL,GAC5B,OAAO,SAACE,GACNA,EAnCwB,SAACF,GAAD,MAAiB,CAC3CG,KAAMP,EACNI,cAiCWM,CAAoBN,MAgB3BO,EAAcC,0BAAgB,CAClC/L,IAxGwB,WAAmC,IAAlCF,EAAiC,uDAAzBkI,EAAcgE,EAAW,uCAC1D,OAAQA,EAAON,MACb,KAAKV,EACH,OAAO,2BACFlL,GADL,IAEE0G,QAASwF,EAAOxF,UAEpB,KAAKyE,EACH,OAAO,2BACFnL,GADL,IAEEyG,MAAOyF,EAAOzF,QAElB,KAAK2E,EACH,OAAO,2BACFpL,GADL,IAEEwL,MAAOU,EAAOV,QAElB,KAAKH,EACH,OAAO,2BACFrL,GADL,IAEEyL,WAAYS,EAAOT,aAEvB,KAAKH,EACH,OAAO,2BACFtL,GADL,IAEE6H,MAAOqE,EAAOrE,QAElB,KAAK0D,EACH,OAAO,2BACFvL,GADL,IAEEC,WAAYiM,EAAOjM,aAEvB,QACE,OAAOD,MA0EPmM,EAtHkB,WACtB,IACE,IAAMC,EAAapF,aAAaC,QAAQ,eACxC,GAAmB,OAAfmF,EAAqB,OACzB,OAAOtF,KAAKC,MAAMqF,GAClB,MAAOC,GAEP,YADAC,QAAQC,IAAIF,IAgHOG,GAEjBC,EAAQC,sBACZV,EACAG,EACAQ,8BAAoBC,0BAAgBC,OAGtCJ,EAAMK,WAAU,kBAtIM,SAAC9M,GACrB,IACEgH,aAAaI,QAAQ,cAAeN,KAAKO,UAAUrH,IACnD,MAAOqM,GACPC,QAAQC,IAAIF,IAkIMU,CAAcN,EAAMO,eAE3BP,SCyBA1M,gBARS,SAACC,GAAD,MAAY,CAClCyG,MAAOzG,EAAME,IAAIuG,MACjB+E,MAAOxL,EAAME,IAAIsL,MACjBC,WAAYzL,EAAME,IAAIuL,WACtB5D,MAAO7H,EAAME,IAAI2H,MACjB5H,WAAYD,EAAME,IAAID,cAGgB,CACtCgN,SDtEsB,SAACxG,GACvB,OAAO,SAACkF,GACNA,EAjCmB,SAAClF,GAAD,MAAY,CACjCmF,KAAMT,EACN1E,SA+BWyG,CAAezG,MCqE1BiF,WACAI,gBACAqB,SDvDsB,SAACtF,GACvB,OAAO,SAAC8D,GACNA,EApCmB,SAAC9D,GAAD,MAAY,CACjC+D,KAAMN,EACNzD,SAkCWuF,CAAevF,MCqDhBwF,cDjDiB,SAACpN,GAC5B,OAAO,SAAC0L,GACNA,EArCwB,SAAC1L,GAAD,MAAiB,CAC3C2L,KAAML,EACNtL,cAmCWqN,CAAoBrN,OC2ClBF,EAlLE,SAAC,GAWX,IAVL0G,EAUI,EAVJA,MACA+E,EASI,EATJA,MACAC,EAQI,EARJA,WACA5D,EAOI,EAPJA,MACA5H,EAMI,EANJA,WACAgN,EAKI,EALJA,SACAvB,EAII,EAJJA,SACAI,EAGI,EAHJA,cACAqB,EAEI,EAFJA,SACAE,EACI,EADJA,cAEME,EAAgB,SAACC,GACrBL,EAASK,EAAMhP,OAAOoF,QAGlB6J,EAAqB,SAACD,GAC1BH,EAAcG,EAAMhP,OAAOoF,QAIvB8J,EAAgB,SAACF,GACrBP,EAASO,EAAMhP,OAAOoF,QAaxB,OACE,qCACE,qBAAKjG,UAAU,SAAf,+CACA,qBAAKA,UAAU,QAAf,SACE,kCACE,uBACEiO,KAAK,QACLhI,MAAM,QACN+J,QAAkB,SAATlH,EACTmH,SAAUF,IALd,aAUF,qBAAK/P,UAAU,QAAf,SACE,kCACE,uBACEiO,KAAK,QACLhI,MAAM,QACN+J,QAAkB,SAATlH,EACTmH,SAAUF,IALd,aAUF,8DAAiCjH,KAEjC,qBAAK9I,UAAU,SAAf,2CACA,qBAAKA,UAAU,QAAf,SACE,kCACE,uBACEiO,KAAK,QACLhI,MAAM,IACN+J,QAAkB,KAAT9F,EACT+F,SAAUL,IALd,eAUF,qBAAK5P,UAAU,QAAf,SACE,kCACE,uBACEiO,KAAK,QACLhI,MAAM,IACN+J,QAAkB,KAAT9F,EACT+F,SAAUL,IALd,cAUF,qBAAK5P,UAAU,QAAf,SACE,kCACE,uBACEiO,KAAK,QACLhI,MAAM,IACN+J,QAAkB,KAAT9F,EACT+F,SAAUL,IALd,eAUF,iDAEY,KAAT1F,EAAe,SAAoB,KAATA,EAAe,UAAY,aAGxD,qBAAKlK,UAAU,SAAf,8CACA,qBAAKA,UAAU,QAAf,SACE,kCACE,uBACEiO,KAAK,QACLhI,MAAM,IACN+J,QAAuB,KAAd1N,EACT2N,SAAUH,IALd,eAUF,qBAAK9P,UAAU,QAAf,SACE,kCACE,uBACEiO,KAAK,QACLhI,MAAM,IACN+J,QAAuB,KAAd1N,EACT2N,SAAUH,IALd,cAUF,qBAAK9P,UAAU,QAAf,SACE,kCACE,uBACEiO,KAAK,QACLhI,MAAM,IACN+J,QAAuB,KAAd1N,EACT2N,SAAUH,IALd,eAUF,iDAEiB,KAAdxN,EAAoB,SAAyB,KAAdA,EAAoB,UAAY,aAGlE,qBAAKtC,UAAU,wBAAf,SACE,0CAEE,uBACEiO,KAAK,QACLiC,IAAI,IACJC,IAAI,IACJlK,MAAO4H,EACPoC,SA3HgB,SAACvB,GACzBX,EAASW,EAAE7N,OAAOoF,QA2HVmK,KAAK,aAIX,qBAAKpQ,UAAU,wBAAf,SACE,2CAEE,uBACEiO,KAAK,QACLiC,IAAI,IACJC,IAAI,IACJlK,MAAO6H,EACPmC,SAnIqB,SAACvB,GAC9BP,EAAcO,EAAE7N,OAAOoF,QAmIfmK,KAAK,mBC7FFC,GAvEI,WAAO,IAAD,EACC7F,mBAAS,SADV,mBAChB8F,EADgB,KACVC,EADU,KAGnBC,EAAQ,GACNtH,EAAoBC,KAAKC,MAAMC,aAAaC,QAAQ,eAChC,OAAtBJ,IAGAsH,EAFW,UAATF,EAEMpH,EAAkBoH,MAAK,SAACzI,EAAG4I,GACjC,OAAI5I,EAAE7E,MAAQyN,EAAEzN,OAAe,EAC3B6E,EAAE7E,MAAQyN,EAAEzN,MAAc,EACvB,KAGDkG,EAAkBoH,MAAK,SAACzI,EAAG4I,GACjC,OACiC,GAA/BxO,SAAS4F,EAAEoB,KAAKM,QAAS,IAAW1B,EAAEoB,KAAKO,QACZ,GAA/BvH,SAASwO,EAAExH,KAAKM,QAAS,IAAWkH,EAAExH,KAAKO,SAEnC,EAEuB,GAA/BvH,SAAS4F,EAAEoB,KAAKM,QAAS,IAAW1B,EAAEoB,KAAKO,QACZ,GAA/BvH,SAASwO,EAAExH,KAAKM,QAAS,IAAWkH,EAAExH,KAAKO,QAEpC,EACF,MASb,OACE,qCACE,kCACE,uEAA0C8G,KAC1C,gCACE,+BACE,oBAAII,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,6BACA,oBAAIA,MAAM,MAAV,uBAGJ,gCACGF,EAAMG,KAAI,SAACC,EAAIC,GACd,OACE,+BACE,6BAAKA,EAAM,IACX,6BAAKD,EAAG5N,QACR,+BACE,sBAAMkJ,MAAM,SAAZ,SAAsB0E,EAAG3H,KAAKM,UAC9B,qCACA,sBAAM2C,MAAM,SAAZ,SAAsB0E,EAAG3H,KAAKO,wBAO1C,8BACE,yBAAQvD,MAAOqK,EAAML,SAhCN,SAACJ,GACpBU,EAAQV,EAAMhP,OAAOoF,QA+BjB,UACE,wBAAQA,MAAM,QAAd,2BACA,wBAAQA,MAAM,OAAd,mC,iBClEK,OAA0B,kCCA1B,OAA0B,wCCcnC6K,GAAW,SAACC,EAAKC,EAAQC,GAAY,IAAD,EACxBzG,mBAAS,IAAI0G,MAAMH,IAA5B5G,EADiC,sBAEVK,oBAAS,GAFC,mBAEjC2G,EAFiC,KAExBC,EAFwB,KAuBxC,OAjBApG,qBAAU,WACRmG,EAAUhH,EAAMwC,OAASxC,EAAMkH,UAC9B,CAACF,IAEJnG,qBAAU,WAKR,OAJAb,EAAMmH,iBAAiB,SAAS,WAC9BF,GAAW,GACPJ,GAAQI,GAAW,MAElB,WACLjH,EAAMoH,oBAAoB,SAAS,WACjCH,GAAW,GACPJ,GAAQI,GAAW,SAG1B,IAEI,CAACD,EAnBO,kBAAMC,GAAYD,IAmBRhH,IA8J3B,IAMe/H,gBANS,SAACC,GAAD,MAAY,CAClC0G,QAAS1G,EAAME,IAAIwG,QACnB8E,MAAOxL,EAAME,IAAIsL,MACjBC,WAAYzL,EAAME,IAAIuL,cAGgB,CACtC0D,WL/FwB,SAACzI,GACzB,OAAO,SAACiF,GACNA,EAhCqB,SAACjF,GAAD,MAAc,CACrCkF,KAAMV,EACNxE,WA8BW0I,CAAiB1I,MK8F5BgF,WACAI,iBAHa/L,EAjKf,YAOG,EAND2G,QAME,IALF8E,EAKC,EALDA,MACAC,EAIC,EAJDA,WACA0D,EAGC,EAHDA,WACAzD,EAEC,EAFDA,SACAI,EACC,EADDA,cAEIzI,EAAUgM,eAERC,EAAY,SAAC5I,GACjByI,EAAWzI,GACV,MALF,EAQqC+H,GAAS5G,IAAO,GARrD,mBAQ4BC,GAR5B,gBAUDa,qBAAU,WACRb,EAAMwC,OACNxC,EAAM8G,OAASpD,IACd,CAACA,IAbH,MAeoDiD,GACnDxO,IACA,GAjBD,mBAesCsP,GAftC,gBA2DD,OAtCA5G,qBAAU,WACR4G,EAAWX,OAASnD,IACnB,CAACA,IAEJ9C,qBAAU,WACR6G,SAASP,iBAAiB,WAAW,SAAC5C,GACpC,OAAQA,EAAE5M,KACR,IAAK,MACH4D,EAAQnC,KAAK,aACb,MACF,IAAK,IACHiO,EAAW,GACX9L,EAAQnC,KAAK,SACb,MACF,IAAK,IACHiO,EAAW,GACX9L,EAAQnC,KAAK,SACb,MACF,IAAK,SACHmC,EAAQnC,KAAK,SACb,MACF,IAAK,IAGL,IAAK,IACKwK,EAARF,EAAiB,EAAc,GAC/B,MACF,IAAK,IAGL,IAAK,IACUM,EAAbL,EAA2B,EAAmB,SAMnD,CAACD,EAAOC,IAET,sBAAKgE,GAAG,kBAAR,UAEE,cAAC,EAAD,IAFF,IAEa,sBAAKA,GAAG,YAAR,UAET,eAAC,KAAD,WACE,cAAC,KAAD,CAAUC,OAAK,EAACC,KAAK,IAAIC,GAAG,UAE5B,eAAC,KAAD,CAAOC,KAAK,QAAZ,UACE,qBAAKlS,UAAU,UAAf,SACE,cAAC,KAAD,CAASiS,GAAG,QAAZ,SACE,2CAIJ,qBAAKjS,UAAU,UAAf,SACE,cAAC,KAAD,CAASiS,GAAG,YAAZ,SACE,+CAGJ,qBAAKjS,UAAU,UAAf,SACE,cAAC,KAAD,CAASiS,GAAG,cAAZ,SACE,iDAGJ,qBAAKjS,UAAU,UAAf,SACE,cAAC,KAAD,CACEiS,GAAG,QACHxP,QAAS,WACP4G,aAAaI,QAAQ,aAAc,MACnCJ,aAAaI,QACX,YACAN,KAAKO,UAAU,CAAEwB,OAAQ,KAAMC,OAAQ,KAAMC,QAAS,KAExDuG,EAAU,IARd,SAWE,mDAGJ,qBAAK3R,UAAU,UAAf,SACE,cAAC,KAAD,CACEiS,GAAG,QACHxP,QAAS,WACP4G,aAAaI,QAAQ,aAAc,MACnCJ,aAAaI,QACX,YACAN,KAAKO,UAAU,CAAEwB,OAAQ,KAAMC,OAAQ,KAAMC,QAAS,KAExDuG,EAAU,IARd,SAWE,kDAGJ,qBAAK3R,UAAU,UAAf,SACE,cAAC,KAAD,CACEiS,GAAG,QACHxP,QAAS,WACP4G,aAAaI,QAAQ,aAAc,MACnCJ,aAAaI,QACX,YACAN,KAAKO,UAAU,CAAEwB,OAAQ,KAAMC,OAAQ,KAAMC,QAAS,KAExDuG,EAAU,IARd,2BAgBJ,cAAC,KAAD,CAAOO,KAAK,QAAZ,SACE,cAAC,EAAD,CAAM/H,MAAOyH,MAGf,cAAC,KAAD,CAAOM,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,GAAD,SAGJ,cAAC,EAAD,aCjLOC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxF,MAAK,YAAkD,IAA/CyF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,CAAQC,SAAUC,cAAlB,SACE,cAAC,IAAD,CAAUjE,MAAOA,GAAjB,SACE,cAAC,GAAD,UAIN+C,SAASmB,eAAe,SAM1Bb,O","file":"static/js/main.c3d9c381.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__2nO0Y\",\"footer\":\"Footer_footer__3grSA\",\"listItem\":\"Footer_listItem__29l2d\",\"inner\":\"Footer_inner__18Y4q\",\"list\":\"Footer_list__1ZlDO\",\"schoolLogo\":\"Footer_schoolLogo__2uf7z\",\"schoolLogoLink\":\"Footer_schoolLogoLink__1FiyZ\",\"schoolLogoIcon\":\"Footer_schoolLogoIcon__2q0lE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__MPGBL\",\"header\":\"Header_header__3sU9y\"};","import { useState, useEffect } from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport { Switch, Route, Redirect, NavLink, useHistory } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        <Menu outerContainerId={\"outer-container\"} pageWrapId={\"page-wrap\"} >\r\n          <a className=\"menu-item\" href=\"/menu\">\r\n            Menu\r\n      </a>\r\n          <a className=\"menu-item\" href=\"/settings\">\r\n            Settings\r\n      </a>\r\n          <a className=\"menu-item\" href=\"/statistics\">\r\n          Statistics\r\n      </a>\r\n        </Menu>\r\n        <h1>Checkers</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/rs_school_js.5ebff106.svg\";","import styles from \"./Footer.module.css\";\r\nimport SchoolLogoIcon from \"./assets/images/rs_school_js.svg\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <div className={styles.container}>\r\n        <div className={styles.inner}>\r\n          <h2>{\"© 2021 Checkers\"}</h2>\r\n\r\n          <div className={styles.list}>\r\n            <a href=\"https://github.com/asbarn\" className={styles.listItem}>\r\n              {\"Yaroslav Kobernyk\"}\r\n            </a>\r\n          </div>\r\n\r\n          <div className={styles.schoolLogo}>\r\n            <a\r\n              href=\"https://rs.school/js/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className={styles.schoolLogoLink}\r\n            >\r\n              <img\r\n                src={SchoolLogoIcon}\r\n                alt=\"School logo\"\r\n                className={styles.schoolLogoIcon}\r\n              />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export function isOdd(n) {\r\n  return Math.abs(n % 2) === 1;\r\n}\r\n\r\nexport function getKeyByValue(object, value) {\r\n  return Object.keys(object).find((key) => object[key] === value);\r\n}\r\n\r\nexport function getColAsInt(columns, coordinate) {\r\n  return columns[coordinate.charAt(0)];\r\n}\r\n\r\nexport function getColAsAlph(columns, columnInt) {\r\n  for (let key in columns) {\r\n    if (!columns.hasOwnProperty(key)) {\r\n      continue;\r\n    }\r\n\r\n    if (columnInt === columns[key]) {\r\n      return key;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function getRowAsInt(coordinate) {\r\n  return parseInt(coordinate.charAt(1), 10);\r\n}\r\n\r\nexport function returnPlayerName(playerBool) {\r\n  return playerBool === true ? \"player1\" : \"player2\";\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Square = (props) => {\r\n  return (\r\n    <button className={\"square \" + (props.themeCheck === \"1\"\r\n      ? \"square-wooden \"\r\n      : props.themeCheck === \"0\"\r\n        ? \"\"\r\n        : \"square-cartoon \") + props[\"squareClasses\"]} onClick={props[\"onClick\"]}>\r\n      <div></div>\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  themeCheck: state.app.themeCheck,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Square);\r\n","import React from \"react\";\r\nimport * as utils from \"../../helper.js\";\r\nimport Square from \"../Square/Square\";\r\n\r\nconst Field = (props) => {\r\n  const renderSquare = (coordinates, squareClasses) => {\r\n    return (\r\n      <Square\r\n        key={coordinates}\r\n        squareClasses={squareClasses}\r\n        onClick={() => props.onClick(coordinates)}\r\n      />\r\n    );\r\n  };\r\n\r\n  let boardRender = [];\r\n  let columnsRender = [];\r\n  const moves = props.moves;\r\n\r\n  for (let coordinates in props.boardState) {\r\n    if (!props.boardState.hasOwnProperty(coordinates)) {\r\n      continue;\r\n    }\r\n\r\n    const col = utils.getColAsInt(props.columns, coordinates);\r\n    const row = utils.getRowAsInt(coordinates);\r\n\r\n    const currentPlayer = utils.returnPlayerName(props.currentPlayer);\r\n\r\n    const colorClass =\r\n      (utils.isOdd(col) && utils.isOdd(row)) ||\r\n      (!utils.isOdd(col) && !utils.isOdd(row))\r\n        ? \"white\"\r\n        : \"black\";\r\n\r\n    let squareClasses = [];\r\n\r\n    squareClasses.push(coordinates);\r\n    squareClasses.push(colorClass);\r\n\r\n    if (props.activePiece === coordinates) {\r\n      squareClasses.push(\"isActive\");\r\n    }\r\n\r\n    if (moves.indexOf(coordinates) > -1) {\r\n      let moveClass = \"movable \" + currentPlayer + \"-move\";\r\n      squareClasses.push(moveClass);\r\n    }\r\n\r\n    if (props.boardState[coordinates] !== null) {\r\n      squareClasses.push(props.boardState[coordinates].player + \" piece\");\r\n\r\n      if (props.boardState[coordinates].isKing === true) {\r\n        squareClasses.push(\"king\");\r\n      }\r\n    }\r\n\r\n    squareClasses = squareClasses.join(\" \");\r\n\r\n    columnsRender.push(\r\n      renderSquare(coordinates, squareClasses, props.boardState[coordinates])\r\n    );\r\n\r\n    if (columnsRender.length >= 8) {\r\n      columnsRender = columnsRender.reverse();\r\n      boardRender.push(\r\n        <div key={boardRender.length} className=\"board-col\">\r\n          {columnsRender}\r\n        </div>\r\n      );\r\n      columnsRender = [];\r\n    }\r\n  }\r\n  return boardRender;\r\n};\r\n\r\nexport default Field;\r\n","import * as utils from \"../../helper.js\";\r\n\r\nclass AI {\r\n  constructor(columns) {\r\n    this.columns = columns;\r\n  }\r\n\r\n  getCorners(coordinates) {\r\n    const col = utils.getColAsInt(this.columns, coordinates);\r\n    const row = utils.getRowAsInt(coordinates);\r\n\r\n    const columnLeft =\r\n      col - 1 >= 0 ? utils.getColAsAlph(this.columns, col - 1) : false;\r\n    const columnRight =\r\n      col + 1 <= 7 ? utils.getColAsAlph(this.columns, col + 1) : false;\r\n\r\n    const rowUpper = row + 1 < 9 ? row + 1 : false;\r\n    const rowLower = row - 1 > 0 ? row - 1 : false;\r\n\r\n    let corners = {};\r\n\r\n    corners.leftUpper =\r\n      columnLeft !== false && rowUpper !== false ? columnLeft + rowUpper : null;\r\n    corners.rightUpper =\r\n      columnRight !== false && rowUpper !== false\r\n        ? columnRight + rowUpper\r\n        : null;\r\n    corners.leftLower =\r\n      columnLeft !== false && rowLower !== false ? columnLeft + rowLower : null;\r\n    corners.rightLower =\r\n      columnRight !== false && rowLower !== false\r\n        ? columnRight + rowLower\r\n        : null;\r\n\r\n    return corners;\r\n  }\r\n\r\n  getMoves(boardState, coordinates, isKing = false, hasJumped = false) {\r\n    if (boardState[coordinates] === null) {\r\n      return [];\r\n    }\r\n\r\n    let moves = [];\r\n    let jumps = [];\r\n\r\n    let killJumps = {};\r\n\r\n    const corners = this.getCorners(coordinates);\r\n\r\n    const row = utils.getRowAsInt(coordinates);\r\n    const player = boardState[coordinates].player;\r\n\r\n    const advanceRow = player === \"player1\" ? row - 1 : row + 1;\r\n\r\n    for (let key in corners) {\r\n      if (!corners.hasOwnProperty(key)) {\r\n        continue;\r\n      }\r\n\r\n      let cornerCoordinates = corners[key];\r\n\r\n      if (cornerCoordinates === null) {\r\n        continue;\r\n      }\r\n\r\n      if (!isKing && cornerCoordinates.indexOf(advanceRow) < 0) {\r\n        continue;\r\n      }\r\n\r\n      if (boardState[cornerCoordinates] === null) {\r\n        moves.push(cornerCoordinates);\r\n      } else {\r\n        let neighborPiece = boardState[cornerCoordinates];\r\n\r\n        if (neighborPiece.player === player) {\r\n          continue;\r\n        }\r\n\r\n        let opponentCorners = this.getCorners(cornerCoordinates);\r\n        let potentialJump = opponentCorners[key];\r\n\r\n        if (boardState[potentialJump] === null) {\r\n          killJumps[cornerCoordinates] = potentialJump;\r\n          jumps.push(potentialJump);\r\n        }\r\n      }\r\n    }\r\n\r\n    let movesOut;\r\n\r\n    if (hasJumped === false) {\r\n      movesOut = moves.concat(jumps);\r\n    } else {\r\n\r\n      movesOut = jumps;\r\n    }\r\n\r\n    let killJumpsOut = jumps.length > 0 ? killJumps : null;\r\n\r\n    return [movesOut, killJumpsOut];\r\n  }\r\n\r\n  movePiece(coordinates, state) {\r\n    let currentState = Object.assign({}, state.history[state.stepNumber]);\r\n    let boardState = Object.assign({}, currentState.boardState);\r\n    let movingPiece = Object.assign({}, boardState[state.activePiece]);\r\n\r\n    let jumpArray = [];\r\n\r\n    for (let key in state.jumpKills) {\r\n      if (!state.jumpKills.hasOwnProperty(key)) {\r\n        continue;\r\n      }\r\n\r\n      jumpArray.push(state.jumpKills[key]);\r\n    }\r\n    if (\r\n      state.moves.indexOf(coordinates) < 0 &&\r\n      jumpArray.indexOf(coordinates) < 0\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n\r\n    if (this.shouldKing(movingPiece, coordinates)) {\r\n      movingPiece.isKing = true;\r\n    }\r\n\r\n    boardState[state.activePiece] = null;\r\n    boardState[coordinates] = movingPiece;\r\n\r\n    const player = movingPiece.player;\r\n    let hasJumped = null;\r\n    let newMoves = [];\r\n    let setCurrentPlayer = player === \"player2\";\r\n    let setActivePiece = null;\r\n\r\n    if (jumpArray.indexOf(coordinates) > -1) {\r\n      let opponentPosition = utils.getKeyByValue(state.jumpKills, coordinates);\r\n      boardState[opponentPosition] = null;\r\n\r\n      newMoves = this.getMoves(\r\n        boardState,\r\n        coordinates,\r\n        movingPiece.isKing,\r\n        true\r\n      );\r\n\r\n      if (newMoves[0].length > 0) {\r\n        hasJumped = true;\r\n        setCurrentPlayer = currentState.currentPlayer;\r\n        setActivePiece = coordinates;\r\n      } else {\r\n        hasJumped = null;\r\n      }\r\n    }\r\n\r\n    if (hasJumped === true) {\r\n      if (newMoves[0].length > 0) {\r\n        setCurrentPlayer = currentState.currentPlayer;\r\n        setActivePiece = coordinates;\r\n      }\r\n    }\r\n\r\n    let stateOut = {};\r\n\r\n    stateOut.boardState = boardState;\r\n    stateOut.currentPlayer = setCurrentPlayer;\r\n    stateOut.activePiece = setActivePiece;\r\n    stateOut.moves = hasJumped === true ? newMoves[0] : [];\r\n    stateOut.jumpKills = hasJumped === true ? newMoves[1] : null;\r\n    stateOut.hasJumped = hasJumped === true ? player : null;\r\n    stateOut.winner = this.evaluateWinner(boardState);\r\n\r\n    return stateOut;\r\n  }\r\n\r\n  shouldKing(movingPiece, coordinates) {\r\n    if (movingPiece.isKing === true) {\r\n      return false;\r\n    }\r\n\r\n    const row = utils.getRowAsInt(coordinates);\r\n    const player = movingPiece.player;\r\n\r\n    return (\r\n      (row === 1 && player === \"player1\") || (row === 8 && player === \"player2\")\r\n    );\r\n  }\r\n\r\n  evaluateWinner(boardState) {\r\n    let player1Pieces = 0;\r\n    let player1Moves = 0;\r\n\r\n    let player2Pieces = 0;\r\n    let player2Moves = 0;\r\n\r\n    for (let coordinates in boardState) {\r\n      if (\r\n        !boardState.hasOwnProperty(coordinates) ||\r\n        boardState[coordinates] === null\r\n      ) {\r\n        continue;\r\n      }\r\n\r\n      const movesData = this.getMoves(\r\n        boardState,\r\n        coordinates,\r\n        boardState[coordinates].isKing,\r\n        false\r\n      );\r\n      const moveCount = movesData[0].length;\r\n\r\n      if (boardState[coordinates].player === \"player1\") {\r\n        ++player1Pieces;\r\n        player1Moves += moveCount;\r\n      } else {\r\n        ++player2Pieces;\r\n        player2Moves += moveCount;\r\n      }\r\n    }\r\n\r\n    if (player1Pieces === 0) {\r\n      return \"player2pieces\";\r\n    }\r\n\r\n    if (player2Pieces === 0) {\r\n      return \"player1pieces\";\r\n    }\r\n\r\n    if (player1Moves === 0) {\r\n      return \"player2moves\";\r\n    }\r\n\r\n    if (player2Moves === 0) {\r\n      return \"player1moves\";\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getComputerMoves(boardState, player) {\r\n    const self = this;\r\n    let computerMoves = {};\r\n\r\n    for (const coordinates in boardState) {\r\n      if (!boardState.hasOwnProperty(coordinates)) {\r\n        continue;\r\n      }\r\n\r\n      const currentSquare = boardState[coordinates];\r\n\r\n      if (currentSquare == null) {\r\n        continue;\r\n      }\r\n\r\n      if (currentSquare.player !== player) {\r\n        continue;\r\n      }\r\n\r\n      const pieceMoves = self.getMoves(\r\n        boardState,\r\n        coordinates,\r\n        boardState[coordinates].isKing,\r\n        false\r\n      );\r\n\r\n      if (pieceMoves[0].length > 0 || pieceMoves[1] !== null) {\r\n        computerMoves[coordinates] = pieceMoves;\r\n      }\r\n    }\r\n\r\n    return computerMoves;\r\n  }\r\n\r\n  getSmartMove(state, boardState, player) {\r\n    const computerMoves = this.getComputerMoves(boardState, player);\r\n\r\n    const moveKeys = Object.keys(computerMoves);\r\n\r\n    const superMoves = {};\r\n\r\n    for (let m = 0; m < moveKeys.length; ++m) {\r\n      const piece = moveKeys[m];\r\n\r\n      const movesData = computerMoves[piece][0];\r\n      const jumpKills = computerMoves[piece][1];\r\n\r\n      const jumpMoves = [];\r\n\r\n      for (const jumpCoordinates in jumpKills) {\r\n        if (!jumpKills.hasOwnProperty(jumpCoordinates)) {\r\n          continue;\r\n        }\r\n        jumpMoves.push(jumpKills[jumpCoordinates]);\r\n      }\r\n\r\n      let highestScore = 0;\r\n      let bestMove = null;\r\n\r\n\r\n      for (let a = 0; a < movesData.length; ++a) {\r\n        const moveTo = movesData[a];\r\n\r\n        let score = 0;\r\n\r\n        let stateLeaf = Object.assign({}, state);\r\n\r\n        stateLeaf.activePiece = piece;\r\n        stateLeaf.moves = movesData;\r\n        stateLeaf.jumpKills = jumpKills;\r\n\r\n        if (jumpMoves.indexOf(moveTo) > -1) {\r\n          score += 10;\r\n        }\r\n\r\n        while (stateLeaf.currentPlayer === false) {\r\n          const newJumpMoves = this.getMoves(\r\n            stateLeaf,\r\n            stateLeaf.activePiece,\r\n            stateLeaf.activePiece.isKing,\r\n            true\r\n          );\r\n\r\n          stateLeaf.moves = newJumpMoves[0];\r\n          stateLeaf.jumpKills = newJumpMoves[1];\r\n\r\n          score += 10;\r\n        }\r\n\r\n        if (score >= highestScore) {\r\n          highestScore = score;\r\n          bestMove = moveTo;\r\n        }\r\n      }\r\n\r\n      superMoves[piece] = [bestMove, highestScore];\r\n    }\r\n\r\n    let finalMove = [];\r\n    let highestAllMoves = 0;\r\n\r\n    for (let pieces in superMoves) {\r\n      if (!superMoves.hasOwnProperty(pieces)) {\r\n        continue;\r\n      }\r\n\r\n      const pieceMove = superMoves[pieces][0];\r\n      const moveScore = superMoves[pieces][1];\r\n\r\n      if (moveScore >= highestAllMoves) {\r\n        if (moveScore === highestAllMoves) {\r\n          finalMove.push([pieces, pieceMove]);\r\n        }\r\n        if (moveScore > highestAllMoves) {\r\n          finalMove = [];\r\n          finalMove.push([pieces, pieceMove]);\r\n          highestAllMoves = moveScore;\r\n        }\r\n      }\r\n    }\r\n\r\n    const chooseMove = finalMove[Math.floor(Math.random() * finalMove.length)];\r\n\r\n    const out = {};\r\n    out.piece = chooseMove[0];\r\n    out.moveTo = chooseMove[1];\r\n\r\n    return out;\r\n  }\r\n\r\n  getRandomMove(boardState, player) {\r\n    const computerMoves = this.getComputerMoves(boardState, player);\r\n    const keys = Object.keys(computerMoves);\r\n    const randomPiece = keys[Math.floor(Math.random() * keys.length)];\r\n\r\n    const movesData = computerMoves[randomPiece][0];\r\n    const randomMoveTo =\r\n      movesData[Math.floor(Math.random() * movesData.length)];\r\n\r\n    let out = {};\r\n    out.piece = randomPiece;\r\n    out.moveTo = randomMoveTo;\r\n\r\n    return out;\r\n  }\r\n}\r\n\r\nexport default AI;","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { returnPlayerName } from \"../../helper.js\";\r\nimport Field from \"../Field/Field.js\";\r\nimport { connect } from \"react-redux\";\r\nimport Opponent from \"../AI/AI.js\";\r\n\r\nfunction useStateCallback(initialState) {\r\n  const [state, setState] = useState(initialState);\r\n  const cbRef = useRef(null);\r\n\r\n  const setStateCallback = useCallback((state, cb) => {\r\n    cbRef.current = cb;\r\n    setState(state);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (cbRef.current) {\r\n      cbRef.current(state);\r\n      cbRef.current = null;\r\n    }\r\n  }, [state]);\r\n\r\n  return [state, setStateCallback];\r\n}\r\n\r\nconst getCurrentPlayer = (color, players) => {\r\n  if (players > 0) return color === \"White\" ? false : true;\r\n  return true;\r\n};\r\n\r\nconst saveResult = (state, time) => {\r\n  let localStorageStats = JSON.parse(localStorage.getItem(\"statistics\"));\r\n  if (localStorageStats === null) {\r\n    localStorageStats = [];\r\n  }\r\n  localStorageStats.push({\r\n    moves: state.stepNumber,\r\n    time: { minutes: time.minutes, seconds: time.seconds },\r\n  });\r\n  localStorage.setItem(\"statistics\", JSON.stringify(localStorageStats));\r\n};\r\n\r\nconst setColumns = () => {\r\n  const columns = {};\r\n  columns.a = 0;\r\n  columns.b = 1;\r\n  columns.c = 2;\r\n  columns.d = 3;\r\n  columns.e = 4;\r\n  columns.f = 5;\r\n  columns.g = 6;\r\n  columns.h = 7;\r\n\r\n  return columns;\r\n};\r\nconst createBoard = (columns) => {\r\n  let board = {};\r\n\r\n  for (let key in columns) {\r\n    if (columns.hasOwnProperty(key)) {\r\n      for (let n = 1; n <= 8; ++n) {\r\n        let row = key + n;\r\n        board[row] = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  board = initPlayers(board);\r\n\r\n  return board;\r\n};\r\nconst initPlayers = (board) => {\r\n  const player1 = [\r\n    \"a8\",\r\n    \"c8\",\r\n    \"e8\",\r\n    \"g8\",\r\n    \"b7\",\r\n    \"d7\",\r\n    \"f7\",\r\n    \"h7\",\r\n    \"a6\",\r\n    \"c6\",\r\n    \"e6\",\r\n    \"g6\",\r\n  ];\r\n  const player2 = [\r\n    \"b3\",\r\n    \"d3\",\r\n    \"f3\",\r\n    \"h3\",\r\n    \"a2\",\r\n    \"c2\",\r\n    \"e2\",\r\n    \"g2\",\r\n    \"b1\",\r\n    \"d1\",\r\n    \"f1\",\r\n    \"h1\",\r\n  ];\r\n\r\n  player1.forEach(function (i) {\r\n    board[i] = createPiece(i, \"player1\");\r\n  });\r\n\r\n  player2.forEach(function (i) {\r\n    board[i] = createPiece(i, \"player2\");\r\n  });\r\n\r\n  return board;\r\n};\r\n\r\nconst createPiece = (location, player) => {\r\n  let piece = {};\r\n\r\n  piece.player = player;\r\n  piece.location = location;\r\n  piece.isKing = false;\r\n\r\n  return piece;\r\n};\r\n\r\nconst Game = ({ players, color, audio, theme }) => {\r\n  const columns = setColumns();\r\n  const User = new Opponent(columns);\r\n  const Computer = new Opponent(columns);\r\n  const [state, setState] = useStateCallback({\r\n    history: [\r\n      {\r\n        boardState: createBoard(columns),\r\n        currentPlayer: getCurrentPlayer(color, players),\r\n      },\r\n    ],\r\n    activePiece: null,\r\n    moves: [],\r\n    jumpKills: null,\r\n    hasJumped: null,\r\n    stepNumber: 0,\r\n    winner: null,\r\n  });\r\n  if (state == null) {\r\n    setState({\r\n      history: [\r\n        {\r\n          boardState: createBoard(columns),\r\n          currentPlayer: getCurrentPlayer(color, players),\r\n        },\r\n      ],\r\n      activePiece: null,\r\n      moves: [],\r\n      jumpKills: null,\r\n      hasJumped: null,\r\n      stepNumber: 0,\r\n      winner: null,\r\n    });\r\n  }\r\n  const [time, setTime] = useState({ second: \"00\", minute: \"00\", counter: 0 });\r\n  const [isActive, setIsActive] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n\r\n    if (isActive) {\r\n      intervalId = setInterval(() => {\r\n        const secondCounter = time.counter % 60;\r\n        const minuteCounter = Math.floor(time.counter / 60);\r\n\r\n        let computedSecond =\r\n          String(secondCounter).length === 1\r\n            ? `0${secondCounter}`\r\n            : secondCounter;\r\n        let computedMinute =\r\n          String(minuteCounter).length === 1\r\n            ? `0${minuteCounter}`\r\n            : minuteCounter;\r\n\r\n        setTime((prevState) => ({\r\n          second: computedSecond,\r\n          minute: computedMinute,\r\n          counter: prevState.counter + 1,\r\n        }));\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [isActive, time.counter]);\r\n\r\n  let currentState = state?.history[state.stepNumber];\r\n  let boardState = state?.history[state.stepNumber].boardState;\r\n\r\n  let currentPlayer = state?.history[state.stepNumber].currentPlayer;\r\n  let moves = state?.moves;\r\n\r\n  let gameStatus = (\r\n    <div>\r\n      <span>\r\n        {currentState?.currentPlayer === true\r\n          ? \"Black's turn. \"\r\n          : \"White's turn. \"}\r\n      </span>\r\n      <span class=\"minute\">{time.minute}</span>\r\n      <span>:</span>\r\n      <span class=\"second\">{time.second}</span>\r\n    </div>\r\n  );\r\n  let resetClass = \"undo\";\r\n\r\n  if (state?.stepNumber < 1) {\r\n    resetClass += \" disabled\";\r\n  }\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"game-state\") != null) {\r\n      setState(JSON.parse(localStorage.getItem(\"game-state\")));\r\n    } else\r\n      setState({\r\n        history: [\r\n          {\r\n            boardState: createBoard(columns),\r\n            currentPlayer: getCurrentPlayer(color, players),\r\n          },\r\n        ],\r\n        activePiece: null,\r\n        moves: [],\r\n        jumpKills: null,\r\n        hasJumped: null,\r\n        stepNumber: 0,\r\n        winner: null,\r\n      });\r\n\r\n    if (localStorage.getItem(\"game-time\") != null) {\r\n      setTime(JSON.parse(localStorage.getItem(\"game-time\")));\r\n    } else setTime({ second: \"00\", minute: \"00\", counter: 0 });\r\n    if (state.history[0].currentPlayer) {\r\n      computerTurn(null, state);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"game-state\", JSON.stringify(state));\r\n    localStorage.setItem(\"game-time\", JSON.stringify(time));\r\n  });\r\n  useEffect(() => {\r\n    switch (state.winner) {\r\n      case \"player1pieces\":\r\n        setIsActive(false);\r\n        saveResult(state, { minutes: time.minute, seconds: time.second });\r\n        localStorage.setItem(\r\n          \"game-state\",\r\n          JSON.stringify({\r\n            history: [\r\n              {\r\n                boardState: createBoard(columns),\r\n                currentPlayer: getCurrentPlayer(color, players),\r\n              },\r\n            ],\r\n            activePiece: null,\r\n            moves: [],\r\n            jumpKills: null,\r\n            hasJumped: null,\r\n            stepNumber: 0,\r\n            winner: null,\r\n          })\r\n        );\r\n        localStorage.setItem(\r\n          \"game-time\",\r\n          JSON.stringify({ second: \"00\", minute: \"00\", counter: 0 })\r\n        );\r\n        gameStatus = (\r\n          <div>\r\n            <span>Black won!</span>\r\n            <span class=\"minute\">{time.minute}</span>\r\n            <span>:</span>\r\n            <span class=\"second\">{time.second}</span>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"player2pieces\":\r\n        setIsActive(false);\r\n        saveResult(state, { minutes: time.minute, seconds: time.second });\r\n        localStorage.setItem(\r\n          \"game-state\",\r\n          JSON.stringify({\r\n            history: [\r\n              {\r\n                boardState: createBoard(columns),\r\n                currentPlayer: getCurrentPlayer(color, players),\r\n              },\r\n            ],\r\n            activePiece: null,\r\n            moves: [],\r\n            jumpKills: null,\r\n            hasJumped: null,\r\n            stepNumber: 0,\r\n            winner: null,\r\n          })\r\n        );\r\n        localStorage.setItem(\r\n          \"game-time\",\r\n          JSON.stringify({ second: \"00\", minute: \"00\", counter: 0 })\r\n        );\r\n        gameStatus = (\r\n          <div>\r\n            <span>White won!</span>\r\n            <span class=\"minute\">{time.minute}</span>\r\n            <span>:</span>\r\n            <span class=\"second\">{time.second}</span>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"player1moves\":\r\n        setIsActive(false);\r\n        saveResult(state, { minutes: time.minute, seconds: time.second });\r\n        localStorage.setItem(\r\n          \"game-state\",\r\n          JSON.stringify({\r\n            history: [\r\n              {\r\n                boardState: createBoard(columns),\r\n                currentPlayer: getCurrentPlayer(color, players),\r\n              },\r\n            ],\r\n            activePiece: null,\r\n            moves: [],\r\n            jumpKills: null,\r\n            hasJumped: null,\r\n            stepNumber: 0,\r\n            winner: null,\r\n          })\r\n        );\r\n        localStorage.setItem(\r\n          \"game-time\",\r\n          JSON.stringify({ second: \"00\", minute: \"00\", counter: 0 })\r\n        );\r\n        gameStatus = (\r\n          <div>\r\n            <span>No moves left. Black won!</span>\r\n            <span class=\"minute\">{time.minute}</span>\r\n            <span>:</span>\r\n            <span class=\"second\">{time.second}</span>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"player2moves\":\r\n        setIsActive(false);\r\n        saveResult(state, { minutes: time.minute, seconds: time.second });\r\n        localStorage.setItem(\r\n          \"game-state\",\r\n          JSON.stringify({\r\n            history: [\r\n              {\r\n                boardState: createBoard(columns),\r\n                currentPlayer: getCurrentPlayer(color, players),\r\n              },\r\n            ],\r\n            activePiece: null,\r\n            moves: [],\r\n            jumpKills: null,\r\n            hasJumped: null,\r\n            stepNumber: 0,\r\n            winner: null,\r\n          })\r\n        );\r\n        localStorage.setItem(\r\n          \"game-time\",\r\n          JSON.stringify({ second: \"00\", minute: \"00\", counter: 0 })\r\n        );\r\n        gameStatus = (\r\n          <div>\r\n            <span>No moves left. White won!</span>\r\n            <span class=\"minute\">{time.minute}</span>\r\n            <span>:</span>\r\n            <span class=\"second\">{time.second}</span>\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        gameStatus = (\r\n          <div>\r\n            <span>\r\n              {currentState.currentPlayer === true\r\n                ? \"Black's turn. \"\r\n                : \"White's turn. \"}\r\n            </span>\r\n            <span class=\"minute\">{time.minute}</span>\r\n            <span>:</span>\r\n            <span class=\"second\">{time.second}</span>\r\n          </div>\r\n        );\r\n        break;\r\n    }\r\n  }, [state?.winner]);\r\n\r\n  const getCurrentState = () => {\r\n    const history = state.history.slice(0, state.stepNumber + 1);\r\n    return history[history.length - 1];\r\n  };\r\n\r\n  const handleClick = async (coordinates) => {\r\n    if (state.winner !== null) {\r\n      return;\r\n    }\r\n    const currentState = getCurrentState();\r\n    const boardState = currentState.boardState;\r\n    const clickedSquare = boardState[coordinates];\r\n\r\n\r\n    if (clickedSquare !== null) {\r\n      if (\r\n        clickedSquare.player !== returnPlayerName(currentState.currentPlayer)\r\n      ) {\r\n        return;\r\n      }\r\n\r\n\r\n      if (state.activePiece === coordinates && state.hasJumped === null) {\r\n        setState({\r\n          ...state,\r\n          activePiece: null,\r\n          moves: [],\r\n          jumpKills: null,\r\n        });\r\n\r\n\r\n        return;\r\n      }\r\n\r\n      if (state.hasJumped !== null && boardState[coordinates] !== null) {\r\n        return;\r\n      }\r\n\r\n\r\n      let movesData = User.getMoves(\r\n        boardState,\r\n        coordinates,\r\n        clickedSquare.isKing,\r\n        false\r\n      );\r\n\r\n      setState({\r\n        ...state,\r\n        activePiece: coordinates,\r\n        moves: movesData[0],\r\n        jumpKills: movesData[1],\r\n      });\r\n      return;\r\n    }\r\n\r\n\r\n    if (state.activePiece === null) {\r\n      return;\r\n    }\r\n\r\n    if (state.moves.length > 0) {\r\n      const postMoveState = User.movePiece(coordinates, state, players);\r\n\r\n      if (postMoveState === null) {\r\n        return;\r\n      }\r\n      audio.play();\r\n      updateStatePostMove(postMoveState).then((res) => {\r\n        if (\r\n          postMoveState.currentPlayer === !currentPlayer &&\r\n          postMoveState.winner === null\r\n        ) {\r\n          computerTurn(null, res);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const computerTurn = (piece = null, curState) => {\r\n    if (players > 1) {\r\n      return;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      const curHistory = curState.history.slice(0, curState.stepNumber + 1);\r\n\r\n      const boardState = curHistory[curHistory.length - 1].boardState;\r\n\r\n      let computerMove;\r\n      let coordinates;\r\n      let moveTo;\r\n\r\n      if (piece === null) {\r\n        computerMove = Computer.getSmartMove(\r\n          curState,\r\n          boardState,\r\n          players === 0 ? \"player2\" : color === \"Black\" ? \"player2\" : \"player1\"\r\n        );\r\n\r\n        coordinates = computerMove.piece;\r\n        moveTo = computerMove.moveTo;\r\n      } else {\r\n        computerMove = User.getMoves(\r\n          boardState,\r\n          piece,\r\n          boardState[piece].isKing,\r\n          true\r\n        );\r\n        coordinates = piece;\r\n        moveTo =\r\n          computerMove[0][Math.floor(Math.random() * computerMove[0].length)];\r\n      }\r\n\r\n      const clickedSquare = boardState[coordinates];\r\n\r\n      let movesData = User.getMoves(\r\n        boardState,\r\n        coordinates,\r\n        clickedSquare.isKing,\r\n        false\r\n      );\r\n\r\n      setState(\r\n        {\r\n          ...curState,\r\n          activePiece: coordinates,\r\n          moves: movesData[0],\r\n          jumpKills: movesData[1],\r\n        },\r\n        (res) => {\r\n          setTimeout(() => {\r\n            const postMoveState = User.movePiece(moveTo, res, players);\r\n\r\n            if (postMoveState === null) {\r\n              return;\r\n            }\r\n            audio.play();\r\n            updateStatePostMove(postMoveState).then((result) => {\r\n              if (players) {\r\n              }\r\n              if (postMoveState.currentPlayer === false && color === \"Black\") {\r\n                computerTurn(postMoveState.activePiece, result);\r\n              }\r\n            });\r\n          }, 500);\r\n        }\r\n      );\r\n    }, 1000);\r\n  };\r\n\r\n  const updateStatePostMove = (postMoveState) => {\r\n    return new Promise((res, rej) => {\r\n      setState(\r\n        {\r\n          ...state,\r\n          history: [\r\n            ...state.history,\r\n            {\r\n              boardState: postMoveState.boardState,\r\n              currentPlayer: postMoveState.currentPlayer,\r\n            },\r\n          ],\r\n          activePiece: postMoveState.activePiece,\r\n          moves: postMoveState.moves,\r\n          jumpKills: postMoveState.jumpKills,\r\n          hasJumped: postMoveState.hasJumped,\r\n          stepNumber: state.history.length,\r\n          winner: postMoveState.winner,\r\n        },\r\n        res\r\n      );\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    setState({\r\n      history: [\r\n        {\r\n          boardState: createBoard(columns),\r\n          currentPlayer: getCurrentPlayer(color, players),\r\n        },\r\n      ],\r\n      activePiece: null,\r\n      moves: [],\r\n      jumpKills: null,\r\n      hasJumped: null,\r\n      stepNumber: 0,\r\n      winner: null,\r\n    });\r\n    setTime(localStorage.getItem({ second: \"00\", minute: \"00\", counter: 0 }));\r\n    localStorage.setItem(\r\n      \"game-state\",\r\n      JSON.stringify({\r\n        history: [\r\n          {\r\n            boardState: createBoard(columns),\r\n            currentPlayer: getCurrentPlayer(color, players),\r\n          },\r\n        ],\r\n        activePiece: null,\r\n        moves: [],\r\n        jumpKills: null,\r\n        hasJumped: null,\r\n        stepNumber: 0,\r\n        winner: null,\r\n      })\r\n    );\r\n    localStorage.setItem(\r\n      \"game-time\",\r\n      JSON.stringify({ second: \"00\", minute: \"00\", counter: 0 })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"reactCheckers\">\r\n      <div\r\n        className={\r\n          theme == \"1\"\r\n            ? \"game-board-wooden\"\r\n            : theme == \"0\"\r\n              ? \"game-board\"\r\n              : \"game-board-cartoon\"\r\n        }\r\n      >\r\n        <div className=\"game-board-letter\">\r\n          <span>8</span>\r\n          <span>7</span>\r\n          <span>6</span>\r\n          <span>5</span>\r\n          <span>4</span>\r\n          <span>3</span>\r\n          <span>2</span>\r\n          <span>1</span>\r\n        </div>\r\n        <Field\r\n          boardState={boardState}\r\n          currentPlayer={currentPlayer}\r\n          activePiece={state?.activePiece}\r\n          moves={moves}\r\n          columns={columns}\r\n          onClick={(coordinates) => handleClick(coordinates)}\r\n        />\r\n        <div className=\"game-board-number\">\r\n          <span>A</span>\r\n          <span>B</span>\r\n          <span>C</span>\r\n          <span>D</span>\r\n          <span>E</span>\r\n          <span>F</span>\r\n          <span>G</span>\r\n          <span>H</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"game-nav\">\r\n        <div className=\"game-status\">{gameStatus}</div>\r\n        <div className=\"reset\">\r\n          <button className={resetClass} onClick={() => reset()}>\r\n            Restart\r\n        </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  players: state.app.players,\r\n  color: state.app.color,\r\n  theme: state.app.theme,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Game);\r\n","import { local } from \"d3\";\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst SET_PLAYERS = \"SET_PLAYERS\",\r\n  SET_COLOR = \"SET_COLOR\",\r\n  SET_MUSIC = \"SET_MUSIC\",\r\n  SET_MUSIC_CHECK = \"SET_MUSIC_CHECK\",\r\n  SET_THEME = \"SET_THEME\",\r\n  SET_THEME_CHECK = \"SET_THEME_CHECK\";\r\n\r\nconst initialState = {\r\n  players: null,\r\n  color: \"Black\",\r\n  theme: 0,\r\n  themeCheck: 0,\r\n  music: 1,\r\n  musicCheck: 1,\r\n};\r\n\r\nconst saveToStorage = (state) => {\r\n  try {\r\n    localStorage.setItem(\"redux-state\", JSON.stringify(state));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst loadFromStorage = () => {\r\n  try {\r\n    const savedState = localStorage.getItem(\"redux-state\");\r\n    if (savedState === null) return undefined;\r\n    return JSON.parse(savedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const AppReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PLAYERS:\r\n      return {\r\n        ...state,\r\n        players: action.players,\r\n      };\r\n    case SET_COLOR:\r\n      return {\r\n        ...state,\r\n        color: action.color,\r\n      };\r\n    case SET_MUSIC:\r\n      return {\r\n        ...state,\r\n        music: action.music,\r\n      };\r\n    case SET_MUSIC_CHECK:\r\n      return {\r\n        ...state,\r\n        musicCheck: action.musicCheck,\r\n      };\r\n    case SET_THEME:\r\n      return {\r\n        ...state,\r\n        theme: action.theme,\r\n      };\r\n    case SET_THEME_CHECK:\r\n      return {\r\n        ...state,\r\n        themeCheck: action.themeCheck,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setPlayersAction = (players) => ({\r\n  type: SET_PLAYERS,\r\n  players,\r\n});\r\n\r\nconst setColorAction = (color) => ({\r\n  type: SET_COLOR,\r\n  color,\r\n});\r\n\r\nconst setMusicAction = (music) => ({\r\n  type: SET_MUSIC,\r\n  music,\r\n});\r\n\r\nconst setMusicCheckAction = (musicCheck) => ({\r\n  type: SET_MUSIC_CHECK,\r\n  musicCheck,\r\n});\r\n\r\nconst setThemeAction = (theme) => ({\r\n  type: SET_THEME,\r\n  theme,\r\n});\r\n\r\nconst setThemeCheckAction = (themeCheck) => ({\r\n  type: SET_THEME_CHECK,\r\n  themeCheck,\r\n});\r\n\r\nexport const setPlayers = (players) => {\r\n  return (dispatch) => {\r\n    dispatch(setPlayersAction(players));\r\n  };\r\n};\r\n\r\nexport const setColor = (color) => {\r\n  return (dispatch) => {\r\n    dispatch(setColorAction(color));\r\n  };\r\n};\r\n\r\nexport const setMusic = (music) => {\r\n  return (dispatch) => {\r\n    dispatch(setMusicAction(music));\r\n  };\r\n};\r\n\r\nexport const setMusicCheck = (musicCheck) => {\r\n  return (dispatch) => {\r\n    dispatch(setMusicCheckAction(musicCheck));\r\n  };\r\n};\r\n\r\nexport const setTheme = (theme) => {\r\n  return (dispatch) => {\r\n    dispatch(setThemeAction(theme));\r\n  };\r\n};\r\n\r\nexport const setThemeCheck = (themeCheck) => {\r\n  return (dispatch) => {\r\n    dispatch(setThemeCheckAction(themeCheck));\r\n  };\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  app: AppReducer,\r\n});\r\n\r\nconst persistedState = loadFromStorage()\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nstore.subscribe(() => saveToStorage(store.getState()));\r\n\r\nexport default store;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setColor, setMusic, setMusicCheck, setTheme, setThemeCheck } from \"../../store\";\r\n\r\nconst Settings = ({\r\n  color,\r\n  music,\r\n  musicCheck,\r\n  theme,\r\n  themeCheck,\r\n  setColor,\r\n  setMusic,\r\n  setMusicCheck,\r\n  setTheme,\r\n  setThemeCheck\r\n}) => {\r\n  const onChangeTheme = (event) => {\r\n    setTheme(event.target.value);\r\n  };\r\n\r\n  const onChangeThemeCheck = (event) => {\r\n    setThemeCheck(event.target.value);\r\n  };\r\n\r\n\r\n  const onValueChange = (event) => {\r\n    setColor(event.target.value);\r\n  };\r\n\r\n  const handleChangeMusic = (e) => {\r\n    setMusic(e.target.value);\r\n    //audio.volume = volume;\r\n  };\r\n\r\n  const handleChangeMusicCheck = (e) => {\r\n    setMusicCheck(e.target.value);\r\n    //audio.volume = volume;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"choose\">Choose the color of your checkers</div>\r\n      <div className=\"radio\">\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"Black\"\r\n            checked={color == \"Black\"}\r\n            onChange={onValueChange}\r\n          />\r\n          Black\r\n        </label>\r\n      </div>\r\n      <div className=\"radio\">\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"White\"\r\n            checked={color == \"White\"}\r\n            onChange={onValueChange}\r\n          />\r\n          White\r\n        </label>\r\n      </div>\r\n      <div>You will start the game as {color}</div>\r\n\r\n      <div className=\"choose\">Choose the type of your board</div>\r\n      <div className=\"radio\">\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"0\"\r\n            checked={theme == \"0\"}\r\n            onChange={onChangeTheme}\r\n          />\r\n          Default\r\n        </label>\r\n      </div>\r\n      <div className=\"radio\">\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"1\"\r\n            checked={theme == \"1\"}\r\n            onChange={onChangeTheme}\r\n          />\r\n          Wooden\r\n        </label>\r\n      </div>\r\n      <div className=\"radio\">\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"2\"\r\n            checked={theme == \"2\"}\r\n            onChange={onChangeTheme}\r\n          />\r\n          Cartoon\r\n        </label>\r\n      </div>\r\n      <div>\r\n        Current theme:\r\n        {theme == \"1\" ? \"Wooden\" : theme == \"0\" ? \"Default\" : \"Cartoon\"}\r\n      </div>\r\n\r\n      <div className=\"choose\">Choose the type of your checkers</div>\r\n      <div className=\"radio\">\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"0\"\r\n            checked={themeCheck == \"0\"}\r\n            onChange={onChangeThemeCheck}\r\n          />\r\n          Default\r\n        </label>\r\n      </div>\r\n      <div className=\"radio\">\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"1\"\r\n            checked={themeCheck == \"1\"}\r\n            onChange={onChangeThemeCheck}\r\n          />\r\n          Angled\r\n        </label>\r\n      </div>\r\n      <div className=\"radio\">\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"2\"\r\n            checked={themeCheck == \"2\"}\r\n            onChange={onChangeThemeCheck}\r\n          />\r\n          Cartoon\r\n        </label>\r\n      </div>\r\n      <div>\r\n        Current theme:\r\n        {themeCheck == \"1\" ? \"Wooden\" : themeCheck == \"0\" ? \"Default\" : \"Cartoon\"}\r\n      </div>\r\n\r\n      <div className=\"slider-wrapper choose\">\r\n        <label>\r\n          Music\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            value={music}\r\n            onChange={handleChangeMusic}\r\n            step=\"0.1\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"slider-wrapper choose\">\r\n        <label>\r\n          Sounds\r\n          <input\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            value={musicCheck}\r\n            onChange={handleChangeMusicCheck}\r\n            step=\"0.1\"\r\n          />\r\n        </label>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  color: state.app.color,\r\n  music: state.app.music,\r\n  musicCheck: state.app.musicCheck,\r\n  theme: state.app.theme,\r\n  themeCheck: state.app.themeCheck,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  setColor,\r\n  setMusic,\r\n  setMusicCheck,\r\n  setTheme, setThemeCheck\r\n})(Settings);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst Statistics = () => {\r\n  const [sort, setSort] = useState(\"moves\");\r\n\r\n  let stats = [];\r\n  const localStorageStats = JSON.parse(localStorage.getItem(\"statistics\"));\r\n  if (localStorageStats !== null) {\r\n    if (sort === \"moves\") {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      stats = localStorageStats.sort((a, b) => {\r\n        if (a.moves < b.moves) return -1;\r\n        if (a.moves > b.moves) return 1;\r\n        return 0;\r\n      });\r\n    } else {\r\n      stats = localStorageStats.sort((a, b) => {       \r\n        if (\r\n          parseInt(a.time.minutes, 10) * 60 + a.time.seconds <\r\n          parseInt(b.time.minutes, 10) * 60 + b.time.seconds\r\n        )\r\n          return -1;\r\n        if (\r\n          parseInt(a.time.minutes, 10) * 60 + a.time.seconds >\r\n          parseInt(b.time.minutes, 10) * 60 + b.time.seconds\r\n        )\r\n          return 1;\r\n        return 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setSort(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <table>\r\n        <caption>Table of the best 10 results by {sort}</caption>\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">№</th>\r\n            <th scope=\"col\">Number of moves</th>\r\n            <th scope=\"col\">Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {stats.map((el, num) => {\r\n            return (\r\n              <tr>\r\n                <th>{num + 1}</th>\r\n                <td>{el.moves}</td>\r\n                <td>\r\n                  <span class=\"minute\">{el.time.minutes}</span>\r\n                  <span>:</span>\r\n                  <span class=\"second\">{el.time.seconds}</span>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <select value={sort} onChange={handleChange}>\r\n          <option value=\"moves\">Sort by moves</option>\r\n          <option value=\"time\">Sort by time</option>\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","export default __webpack_public_path__ + \"static/media/theme.5e496d2b.mp3\";","export default __webpack_public_path__ + \"static/media/checkerMove.20e306ae.mp3\";","import { connect } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Game from \"./components/Game/Game\";\nimport Settings from \"./components/Settings/Settings\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport { setPlayers, setMusic, setMusicCheck } from \"./store\";\nimport { Switch, Route, Redirect, NavLink, useHistory } from \"react-router-dom\";\nimport { slide as Menu } from 'react-burger-menu'\nimport theme from \"./sounds/theme.mp3\";\nimport themeCheck from \"./sounds/checkerMove.mp3\";\n\nconst useAudio = (url, ending, volume) => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(true);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing]);\n\n  useEffect(() => {\n    audio.addEventListener(\"ended\", () => {\n      setPlaying(false);\n      if (ending) setPlaying(true);\n    });\n    return () => {\n      audio.removeEventListener(\"ended\", () => {\n        setPlaying(false);\n        if (ending) setPlaying(true);\n      });\n    };\n  }, []);\n\n  return [playing, toggle, audio];\n};\n\nfunction App({\n  players,\n  music,\n  musicCheck,\n  setPlayers,\n  setMusic,\n  setMusicCheck,\n}) {\n  let history = useHistory();\n\n  const startGame = (players) => {\n    setPlayers(players);\n    <Redirect to=\"/game\" />;\n  };\n\n  let [playing, togglePlaying, audio] = useAudio(theme, true, music);\n\n  useEffect(() => {\n    audio.play();\n    audio.volume = music;\n  }, [music]);\n\n  let [playingCheck, togglePlayingCheck, audioCheck] = useAudio(\n    themeCheck,\n    false,\n    musicCheck\n  );\n\n  useEffect(() => {\n    audioCheck.volume = musicCheck;\n  }, [musicCheck]);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", (e) => {\n      switch (e.key) {\n        case \"Tab\":\n          history.push(\"/settings\");\n          break;\n        case \"1\":\n          setPlayers(1);\n          history.push(\"/game\");\n          break;\n        case \"2\":\n          setPlayers(2);\n          history.push(\"/game\");\n          break;\n        case \"Escape\":\n          history.push(\"/menu\");\n          break;\n        case \"m\":\n          music ? setMusic(0) : setMusic(1);\n          break;\n        case \"M\":\n          music ? setMusic(0) : setMusic(1);\n          break;\n        case \"n\":\n          musicCheck ? setMusicCheck(0) : setMusicCheck(1);\n          break;\n        case \"N\":\n          musicCheck ? setMusicCheck(0) : setMusicCheck(1);\n          break;\n        default:\n          break;\n      }\n    });\n  }, [music, musicCheck]);\n  return (\n    <div id=\"outer-container\">\n\n      <Header /> <div id=\"page-wrap\">\n\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/menu\" />\n\n          <Route path=\"/menu\">\n            <div className=\"navlink\">\n              <NavLink to=\"/menu\">\n                <div>Menu</div>\n              </NavLink>\n            </div>\n\n            <div className=\"navlink\">\n              <NavLink to=\"/settings\">\n                <div>Settings</div>\n              </NavLink>\n            </div>\n            <div className=\"navlink\">\n              <NavLink to=\"/statistics\">\n                <div>Statistics</div>\n              </NavLink>\n            </div>\n            <div className=\"navlink\">\n              <NavLink\n                to=\"/game\"\n                onClick={() => {\n                  localStorage.setItem(\"game-state\", null);\n                  localStorage.setItem(\n                    \"game-time\",\n                    JSON.stringify({ second: \"00\", minute: \"00\", counter: 0 })\n                  );\n                  startGame(1);\n                }}\n              >\n                <div>Singleplayer</div>\n              </NavLink>\n            </div>\n            <div className=\"navlink\">\n              <NavLink\n                to=\"/game\"\n                onClick={() => {\n                  localStorage.setItem(\"game-state\", null);\n                  localStorage.setItem(\n                    \"game-time\",\n                    JSON.stringify({ second: \"00\", minute: \"00\", counter: 0 })\n                  );\n                  startGame(2);\n                }}\n              >\n                <div>Multiplayer</div>\n              </NavLink>\n            </div>\n            <div className=\"navlink\">\n              <NavLink\n                to=\"/game\"\n                onClick={() => {\n                  localStorage.setItem(\"game-state\", null);\n                  localStorage.setItem(\n                    \"game-time\",\n                    JSON.stringify({ second: \"00\", minute: \"00\", counter: 0 })\n                  );\n                  startGame(0);\n                }}\n              >\n                AI vs AI\n            </NavLink>\n            </div>\n          </Route>\n\n          <Route path=\"/game\">\n            <Game audio={audioCheck} />\n          </Route>\n\n          <Route path=\"/settings\">\n            <Settings />\n          </Route>\n          <Route path=\"/statistics\">\n            <Statistics />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  players: state.app.players,\n  music: state.app.music,\n  musicCheck: state.app.musicCheck,\n});\n\nexport default connect(mapStateToProps, {\n  setPlayers,\n  setMusic,\n  setMusicCheck,\n})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}